{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"inputProps\", \"combinedProps\", \"children\", \"wrapperRef\"],\n    _excluded2 = [\"_interactionBox\", \"_icon\"],\n    _excluded3 = [\"icon\", \"children\", \"wrapperRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../Box\";\nimport { Center } from \"../../composites/Center\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { mergeRefs } from \"./../../../utils\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { useRadio } from '@react-native-aria/radio';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { RadioContext } from \"./RadioGroup\";\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { CircleIcon } from \"../Icon/Icons\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { combineContextAndProps, isEmptyObj } from \"../../../utils\";\nimport { extractInObject, stylingProps } from \"../../../theme/tools/utils\";\nimport { useFormControlContext } from \"../../composites/FormControl\";\nvar RadioComponent = memo(forwardRef(function (_ref2, ref) {\n  var icon = _ref2.icon,\n      inputProps = _ref2.inputProps,\n      combinedProps = _ref2.combinedProps,\n      children = _ref2.children,\n      wrapperRef = _ref2.wrapperRef,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var isInvalid = combinedProps.isInvalid,\n      isReadOnly = combinedProps.isReadOnly,\n      isIndeterminate = combinedProps.isIndeterminate;\n  var isDisabled = inputProps.disabled,\n      isChecked = inputProps.checked;\n\n  var _ref = React.useRef(null);\n\n  var _useHover = useHover({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var mergedRefs = mergeRefs([_ref, wrapperRef]);\n\n  var _useFocusRing = useFocusRing(),\n      focusProps = _useFocusRing.focusProps,\n      isFocusVisible = _useFocusRing.isFocusVisible;\n\n  var _usePropsResolution = usePropsResolution('Radio', combinedProps, {\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly,\n    isFocusVisible: isFocusVisible,\n    isDisabled: isDisabled,\n    isIndeterminate: isIndeterminate,\n    isChecked: isChecked,\n    isHovered: isHovered\n  }),\n      _interactionBox = _usePropsResolution._interactionBox,\n      _icon = _usePropsResolution._icon,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _extractInObject = extractInObject(resolvedProps, [].concat(_toConsumableArray(stylingProps.margin), _toConsumableArray(stylingProps.layout), _toConsumableArray(stylingProps.flexbox), _toConsumableArray(stylingProps.position), ['_text'])),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      layoutProps = _extractInObject2[0],\n      nonLayoutProps = _extractInObject2[1];\n\n  var sizedIcon = function sizedIcon() {\n    return React.cloneElement(icon, _objectSpread({}, _icon));\n  };\n\n  var component = React.createElement(Box, _extends({\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }, layoutProps, {\n    opacity: isDisabled ? 0.4 : 1,\n    cursor: isDisabled ? 'not-allowed' : 'pointer'\n  }), React.createElement(Center, null, React.createElement(Box, _extends({}, _interactionBox, {\n    style: {\n      transition: 'height 200ms, width 200ms'\n    },\n    h: isFocusVisible || isHovered ? '200%' : '100%',\n    w: isFocusVisible || isHovered ? '200%' : '100%',\n    pointerEvents: \"none\"\n  })), React.createElement(Center, nonLayoutProps, icon && sizedIcon && isChecked ? sizedIcon() : React.createElement(CircleIcon, _extends({}, _icon, {\n    opacity: isChecked ? 1 : 0\n  })))), children);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, {\n    accessibilityRole: \"label\",\n    ref: mergedRefs\n  }, React.createElement(VisuallyHidden, null, React.createElement(\"input\", _extends({}, inputProps, focusProps, {\n    ref: ref\n  }))), component);\n}));\n\nvar Radio = function Radio(_ref3, ref) {\n  var icon = _ref3.icon,\n      children = _ref3.children,\n      wrapperRef = _ref3.wrapperRef,\n      props = _objectWithoutProperties(_ref3, _excluded3);\n\n  var _contextState$state;\n\n  var formControlContext = useFormControlContext();\n  var contextState = React.useContext(RadioContext);\n  var combinedProps = combineContextAndProps(formControlContext, props);\n  var inputRef = React.useRef(null);\n  var radioState = useRadio(_objectSpread(_objectSpread({}, combinedProps), {}, {\n    'aria-label': props.accessibilityLabel,\n    children: children\n  }), (_contextState$state = contextState.state) !== null && _contextState$state !== void 0 ? _contextState$state : {}, inputRef);\n  var inputProps = React.useMemo(function () {\n    return radioState.inputProps;\n  }, [radioState.inputProps.checked, radioState.inputProps.disabled]);\n\n  var _React$useState = React.useState(_objectSpread({}, combinedProps)),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      contextCombinedProps = _React$useState2[0];\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (isEmptyObj(contextState)) {\n    console.error('Error: Radio must be wrapped inside a Radio.Group');\n    return React.createElement(React.Fragment, null);\n  }\n\n  return React.createElement(RadioComponent, {\n    inputProps: inputProps,\n    combinedProps: contextCombinedProps,\n    children: children,\n    ref: ref,\n    icon: icon,\n    wrapperRef: wrapperRef\n  });\n};\n\nexport default memo(forwardRef(Radio));","map":{"version":3,"sources":["Radio.web.tsx"],"names":["RadioComponent","memo","forwardRef","props","isIndeterminate","disabled","checked","isChecked","_ref","React","isHovered","useHover","mergedRefs","mergeRefs","isFocusVisible","useFocusRing","resolvedProps","usePropsResolution","isInvalid","isReadOnly","isDisabled","extractInObject","stylingProps","sizedIcon","_icon","component","transition","icon","useHasResponsiveProps","ref","Radio","formControlContext","useFormControlContext","contextState","combinedProps","combineContextAndProps","inputRef","radioState","useRadio","children","inputProps","isEmptyObj","console","wrapperRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport { Center } from '../../composites/Center';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IRadioProps } from './types';\nimport { mergeRefs } from './../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useRadio } from '@react-native-aria/radio';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { RadioContext } from './RadioGroup';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { CircleIcon } from '../Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps, isEmptyObj } from '../../../utils';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { useFormControlContext } from '../../composites/FormControl';\n\nconst RadioComponent = memo(\n  forwardRef(\n    (\n      { icon, inputProps, combinedProps, children, wrapperRef, ...props }: any,\n      ref: any\n    ) => {\n      const { isInvalid, isReadOnly, isIndeterminate } = combinedProps;\n\n      const { disabled: isDisabled, checked: isChecked } = inputProps;\n      const _ref = React.useRef(null);\n      const { isHovered } = useHover({}, _ref);\n      const mergedRefs = mergeRefs([_ref, wrapperRef]);\n      const { focusProps, isFocusVisible } = useFocusRing();\n      // const mergedWrapperRef = React.useMemo(() => mergeRefs([wrapperRef, _ref]), []);\n\n      const { _interactionBox, _icon, ...resolvedProps } = usePropsResolution(\n        'Radio',\n        combinedProps,\n        {\n          isInvalid,\n          isReadOnly,\n          isFocusVisible,\n          isDisabled,\n          isIndeterminate,\n          isChecked,\n          isHovered,\n        }\n      );\n\n      const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n        ...stylingProps.margin,\n        ...stylingProps.layout,\n        ...stylingProps.flexbox,\n        ...stylingProps.position,\n        '_text',\n      ]);\n\n      // only calling below function when icon exist.\n      const sizedIcon = () =>\n        //@ts-ignore\n        React.cloneElement(icon, {\n          ..._icon,\n        });\n\n      const component = (\n        <Box\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          {...layoutProps}\n          opacity={isDisabled ? 0.4 : 1}\n          cursor={isDisabled ? 'not-allowed' : 'pointer'}\n        >\n          <Center>\n            {/* Interaction Box */}\n            <Box\n              {..._interactionBox}\n              style={{\n                // @ts-ignore - only for web\"\n                transition: 'height 200ms, width 200ms',\n              }}\n              h={isFocusVisible || isHovered ? '200%' : '100%'}\n              w={isFocusVisible || isHovered ? '200%' : '100%'}\n              pointerEvents=\"none\"\n            />\n            {/* Radio */}\n            <Center {...nonLayoutProps}>\n              {icon && sizedIcon && isChecked ? (\n                sizedIcon()\n              ) : (\n                <CircleIcon {..._icon} opacity={isChecked ? 1 : 0} />\n              )}\n            </Center>\n          </Center>\n          {children}\n        </Box>\n      );\n      //TODO: refactor for responsive prop\n      if (useHasResponsiveProps(props)) {\n        return null;\n      }\n\n      // console.log(inputProps, focusProps, ref);\n      // return null;\n\n      return (\n        <Box\n          // @ts-ignore - RN web supports accessibilityRole=\"label\"\n          accessibilityRole=\"label\"\n          ref={mergedRefs}\n        >\n          <VisuallyHidden>\n            <input {...inputProps} {...focusProps} ref={ref} />\n          </VisuallyHidden>\n          {component}\n        </Box>\n      );\n    }\n  )\n);\n\nconst Radio = (\n  { icon, children, wrapperRef, ...props }: IRadioProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const contextState = React.useContext(RadioContext);\n\n  const combinedProps = combineContextAndProps(formControlContext, props);\n\n  const inputRef = React.useRef(null);\n  const radioState = useRadio(\n    { ...combinedProps, 'aria-label': props.accessibilityLabel, children },\n    contextState.state ?? {},\n    inputRef\n  );\n\n  // console.log('radio', radioState);\n  //@ts-ignore\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const inputProps = React.useMemo(() => radioState.inputProps, [\n    radioState.inputProps.checked,\n    radioState.inputProps.disabled,\n  ]);\n\n  const [contextCombinedProps] = React.useState({\n    ...combinedProps,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (isEmptyObj(contextState)) {\n    console.error('Error: Radio must be wrapped inside a Radio.Group');\n    return <></>;\n  }\n\n  return (\n    <RadioComponent\n      inputProps={inputProps}\n      combinedProps={contextCombinedProps}\n      children={children}\n      ref={ref}\n      icon={icon}\n      wrapperRef={wrapperRef}\n    />\n  );\n};\n\nexport default memo(forwardRef(Radio));\n"]},"metadata":{},"sourceType":"module"}