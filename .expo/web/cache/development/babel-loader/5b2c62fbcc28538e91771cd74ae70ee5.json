{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Pressable } from \"../../primitives/Pressable\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Backdrop = function Backdrop(props) {\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Pressable, _extends({\n    _web: {\n      cursor: 'default'\n    },\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    accessible: false,\n    importantForAccessibility: \"no\",\n    bg: props.bg || 'rgb(0, 0, 0)',\n    opacity: 0.3\n  }, props));\n};\n\nexport default React.memo(Backdrop);","map":{"version":3,"sources":["index.tsx"],"names":["Backdrop","props","useHasResponsiveProps","cursor","React"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,SAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,QAAQ,GAAIC,SAAZD,QAAYC,CAAAA,KAAD,EAA4B;AAE3C,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AADJ,KADR;AAIE,IAAA,QAAQ,EAJV,UAAA;AAKE,IAAA,GAAG,EALL,CAAA;AAME,IAAA,MAAM,EANR,CAAA;AAOE,IAAA,IAAI,EAPN,CAAA;AAQE,IAAA,KAAK,EARP,CAAA;AASE,IAAA,UAAU,EATZ,KAAA;AAUE,IAAA,yBAAyB,EAV3B,IAAA;AAWE,IAAA,EAAE,EAAEF,KAAK,CAALA,EAAAA,IAXN,cAAA;AAYE,IAAA,OAAO,EAAE;AAZX,GAAA,EADF,KACE,CAAA,CADF;AALF,CAAA;;AAwBA,eAAeG,KAAK,CAALA,IAAAA,CAAf,QAAeA,CAAf","sourcesContent":["import React from 'react';\nimport { Pressable, IPressableProps } from '../../primitives/Pressable';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Backdrop = (props: IPressableProps) => {\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Pressable\n      _web={{\n        cursor: 'default',\n      }}\n      position=\"absolute\"\n      top={0}\n      bottom={0}\n      left={0}\n      right={0}\n      accessible={false}\n      importantForAccessibility=\"no\"\n      bg={props.bg || 'rgb(0, 0, 0)'}\n      opacity={0.3}\n      {...props}\n    ></Pressable>\n  );\n};\n\nexport default React.memo(Backdrop);\n"]},"metadata":{},"sourceType":"module"}