{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { getAttachedChildren } from \"../../../utils\";\nimport { HStack } from \"../Stack\";\nimport { extractInObject, stylingProps } from \"../../../theme/tools/utils\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar supplyPropsToChildren = function supplyPropsToChildren(children, props) {\n  return React.Children.map(children, function (child) {\n    return React.cloneElement(child, props, child.props.children);\n  });\n};\n\nexport var InputGroup = memo(forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _extractInObject = extractInObject(props, [].concat(_toConsumableArray(stylingProps.margin), _toConsumableArray(stylingProps.border), _toConsumableArray(stylingProps.layout), _toConsumableArray(stylingProps.flexbox), _toConsumableArray(stylingProps.position), _toConsumableArray(stylingProps.background), ['space', 'shadow', 'opacity'])),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      layoutProps = _extractInObject2[0],\n      nonLayoutProps = _extractInObject2[1];\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(HStack, _extends({}, layoutProps, {\n    ref: ref\n  }), supplyPropsToChildren(getAttachedChildren(children), nonLayoutProps));\n}));","map":{"version":3,"sources":["InputGroup.tsx"],"names":["supplyPropsToChildren","child","React","InputGroup","memo","forwardRef","props","extractInObject","stylingProps","useHasResponsiveProps","ref","getAttachedChildren"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AAEA,SAAA,mBAAA;AACA,SAAA,MAAA;AACA,SAAA,eAAA,EAAA,YAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,QAAA,EAAA,KAAA,EAA+B;AAC3D,SAAO,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA8BC,UAAAA,KAAD,EAAwB;AAC1D,WAAOC,KAAK,CAALA,YAAAA,CAAAA,KAAAA,EAAAA,KAAAA,EAAiCD,KAAK,CAALA,KAAAA,CAAxC,QAAOC,CAAP;AADF,GAAO,CAAP;AADF,CAAA;;AAMA,OAAO,IAAMC,UAAU,GAAGC,IAAI,CAC5BC,UAAU,CAAC,gBAAA,GAAA,EAAwD;AAAA,MAAvD,QAAuD,QAAvD,QAAuD;AAAA,MAAxCC,KAAwC;;AACjE,yBAAsCC,eAAe,CAAA,KAAA,+BAChDC,YAAY,CAD4C,MAAR,sBAEhDA,YAAY,CAF4C,MAAR,sBAGhDA,YAAY,CAH4C,MAAR,sBAIhDA,YAAY,CAJ4C,OAAR,sBAKhDA,YAAY,CAL4C,QAAR,sBAMhDA,YAAY,CAN4C,UAAR,IAAQ,OAAR,EAAQ,QAAR,EADY,SACZ,GAArD;AAAA;AAAA,MAAM,WAAN;AAAA,MAAM,cAAN;;AAYA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,WAAA,EAAA;AAAyB,IAAA,GAAG,EAAEC;AAA9B,GAAA,CAAA,EACGV,qBAAqB,CAACW,mBAAmB,CAApB,QAAoB,CAApB,EAF1B,cAE0B,CADxB,CADF;AAjBG,CACK,CADkB,CAAvB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IInputGroupProps } from './types';\nimport { getAttachedChildren } from '../../../utils';\nimport { HStack } from '../Stack';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst supplyPropsToChildren = (children: any, props: any) => {\n  return React.Children.map(children, (child: JSX.Element) => {\n    return React.cloneElement(child, props, child.props.children);\n  });\n};\n\nexport const InputGroup = memo(\n  forwardRef(({ children, ...props }: IInputGroupProps, ref: any) => {\n    const [layoutProps, nonLayoutProps] = extractInObject(props, [\n      ...stylingProps.margin,\n      ...stylingProps.border,\n      ...stylingProps.layout,\n      ...stylingProps.flexbox,\n      ...stylingProps.position,\n      ...stylingProps.background,\n      'space',\n      'shadow',\n      'opacity',\n    ]);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <HStack {...layoutProps} ref={ref}>\n        {supplyPropsToChildren(getAttachedChildren(children), nonLayoutProps)}\n      </HStack>\n    );\n  })\n);\n"]},"metadata":{},"sourceType":"module"}