{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\"];\nimport React from 'react';\nimport { useThemeProps } from \"../../../hooks/useThemeProps\";\nimport PresenceTransition from \"./PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar ScaleFade = function ScaleFade(_ref, ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useThemeProps = useThemeProps('ScaleFade', props),\n      animationState = _useThemeProps.in,\n      duration = _useThemeProps.duration,\n      initialScale = _useThemeProps.initialScale;\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(PresenceTransition, {\n    initial: {\n      opacity: 0,\n      scale: initialScale\n    },\n    animate: {\n      opacity: 1,\n      scale: 1,\n      transition: {\n        duration: duration\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: initialScale,\n      transition: {\n        duration: duration\n      }\n    },\n    style: style,\n    visible: animationState,\n    ref: ref\n  }, children);\n};\n\nexport default React.memo(React.forwardRef(ScaleFade));","map":{"version":3,"sources":["ScaleFade.tsx"],"names":["ScaleFade","props","in","initialScale","useThemeProps","useHasResponsiveProps","opacity","scale","transition","duration","ref","React"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,aAAA;AAEA,OAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAA,GAAA,EAGb;AAAA,MAFH,QAEG,QAFH,QAEG;AAAA,MAFH,KAEG,QAFH,KAEG;AAAA,MAFmBC,KAEnB;;AACH,uBAAuDG,aAAa,CAAA,WAAA,EADjE,KACiE,CAApE;AAAA,MAAM,cAAN,kBAAQF,EAAR;AAAA,MAAM,QAAN,kBAAM,QAAN;AAAA,MAAsCC,YAAtC,kBAAsCA,YAAtC;;AAKA,MAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAT,CAAA;AAAcC,MAAAA,KAAK,EAAEJ;AAArB,KADX;AAEE,IAAA,OAAO,EAAE;AAAEG,MAAAA,OAAO,EAAT,CAAA;AAAcC,MAAAA,KAAK,EAAnB,CAAA;AAAwBC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,QAAAA,EAAAA;AAAF;AAApC,KAFX;AAGE,IAAA,IAAI,EAAE;AAAEH,MAAAA,OAAO,EAAT,CAAA;AAAcC,MAAAA,KAAK,EAAnB,YAAA;AAAmCC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,QAAAA,EAAAA;AAAF;AAA/C,KAHR;AAIE,IAAA,KAAK,EAJP,KAAA;AAKE,IAAA,OAAO,EALT,cAAA;AAME,IAAA,GAAG,EAAEC;AANP,GAAA,EADF,QACE,CADF;AAbF,CAAA;;AA2BA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,SAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport type { IScaleFadeProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ScaleFade = (\n  { children, style, ...props }: IScaleFadeProps,\n  ref?: any\n) => {\n  const { in: animationState, duration, initialScale } = useThemeProps(\n    'ScaleFade',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <PresenceTransition\n      initial={{ opacity: 0, scale: initialScale }}\n      animate={{ opacity: 1, scale: 1, transition: { duration } }}\n      exit={{ opacity: 0, scale: initialScale, transition: { duration } }}\n      style={style}\n      visible={animationState}\n      ref={ref}\n    >\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(ScaleFade));\n"]},"metadata":{},"sourceType":"module"}