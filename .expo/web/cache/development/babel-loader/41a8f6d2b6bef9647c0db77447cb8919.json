{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Flex from \"../../primitives/Flex\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport isNil from 'lodash.isnil';\nimport { default as Avatar } from \"./Avatar\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar getAvatarGroupChildren = function getAvatarGroupChildren(children, space, max, plusAvatarBg, props) {\n  var childrenArray = React.Children.toArray(children);\n  var plusAvatars = 0;\n\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n\n  var trailingChildren = childrenArray.slice(1);\n  var defaultProps = {\n    ml: space\n  };\n  return [plusAvatars > 0 ? React.createElement(Avatar, _extends({\n    bg: plusAvatarBg\n  }, defaultProps, props), '+ ' + plusAvatars) : null, React.Children.map(trailingChildren.reverse(), function (child, index) {\n    return React.cloneElement(child, _objectSpread(_objectSpread(_objectSpread({\n      key: \"avatar-group-child-\".concat(index)\n    }, props), defaultProps), child.props), child.props.children);\n  }), React.cloneElement(childrenArray[0], _objectSpread(_objectSpread({}, props), childrenArray[0].props), childrenArray[0].props.children)];\n};\n\nvar AvatarGroup = function AvatarGroup(allProps, ref) {\n  var children = allProps.children,\n      props = _objectWithoutProperties(allProps, _excluded);\n\n  var _usePropsResolution = usePropsResolution('AvatarGroup', props),\n      borderColor = _usePropsResolution.borderColor,\n      borderWidth = _usePropsResolution.borderWidth,\n      bg = _usePropsResolution.bg,\n      space = _usePropsResolution.space,\n      max = _usePropsResolution.max;\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Flex, {\n    flexDirection: \"row-reverse\",\n    ref: ref\n  }, getAvatarGroupChildren(children, space, max, bg, _objectSpread({\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  }, props)));\n};\n\nexport default memo(forwardRef(AvatarGroup));","map":{"version":3,"sources":["Group.tsx"],"names":["default","getAvatarGroupChildren","childrenArray","React","plusAvatars","isNil","max","trailingChildren","defaultProps","ml","space","plusAvatarBg","key","child","props","AvatarGroup","usePropsResolution","useHasResponsiveProps","ref","borderColor","borderWidth","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,IAAA;AACA,SAAA,kBAAA;AACA,OAAA,KAAA,MAAA,cAAA;AAEA,SAASA,OAAO,IAAhB,MAAA;AACA,SAAA,qBAAA;;AAIA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,QAAA,EAAA,KAAA,EAAA,GAAA,EAAA,YAAA,EAAA,KAAA,EAM1B;AACH,MAAIC,aAAkB,GAAGC,KAAK,CAALA,QAAAA,CAAAA,OAAAA,CAAzB,QAAyBA,CAAzB;AACA,MAAIC,WAAmB,GAAvB,CAAA;;AACA,MAAI,CAACC,KAAK,CAAN,GAAM,CAAN,IAAeC,GAAG,GAAGJ,aAAa,CAAlC,MAAA,IAA6CI,GAAG,GAApD,CAAA,EAA0D;AACxDF,IAAAA,WAAW,GAAGF,aAAa,CAAbA,MAAAA,GAAdE,GAAAA;AACAF,IAAAA,aAAa,GAAGA,aAAa,CAAbA,KAAAA,CAAAA,CAAAA,EAAhBA,GAAgBA,CAAhBA;AACD;;AACD,MAAMK,gBAAgB,GAAGL,aAAa,CAAbA,KAAAA,CAAzB,CAAyBA,CAAzB;AACA,MAAMM,YAAY,GAAG;AACnBC,IAAAA,EAAE,EAAEC;AADe,GAArB;AAGA,SAAO,CACLN,WAAW,GAAXA,CAAAA,GACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAAQ,IAAA,EAAE,EAAEO;AAAZ,GAAA,EAAA,YAAA,EAAA,KAAA,CAAA,EACG,OAFLP,WACE,CADFA,GADK,IAAA,EAML,KAAK,CAAL,QAAA,CAAA,GAAA,CACEG,gBAAgB,CADlB,OACEA,EADF,EAEE,UAAA,KAAA,EAAA,KAAA,EAA+B;AAC7B,WAAO,KAAK,CAAL,YAAA,CAAA,KAAA;AAGHK,MAAAA,GAAG,EAAA,sBAAA,MAAA,CADL,KACK;AAHA,OAEL,KAFK,GAEL,YAFK,GAMAC,KAAK,CAACC,KANN,GAQLD,KAAK,CAALA,KAAAA,CARF,QAAO,CAAP;AATC,GAML,CANK,EAqBL,KAAK,CAAL,YAAA,CACEX,aAAa,CADf,CACe,CADf,kCAEE,KAFF,GAIOA,aAAa,CAAbA,CAAa,CAAbA,CAAiBY,KAJxB,GAMEZ,aAAa,CAAbA,CAAa,CAAbA,CAAAA,KAAAA,CA3BJ,QAqBE,CArBK,CAAP;AAjBF,CAAA;;AAiDA,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAAA,QAAA,EAAA,GAAA,EAA2C;AAC7D,MAAM,QAAN,GAAA,QAAA,CAAM,QAAN;AAAA,MAAqBD,KAArB,4BAAA,QAAA;;AACA,4BAAqDE,kBAAkB,CAAA,aAAA,EAFV,KAEU,CAAvE;AAAA,MAAM,WAAN,uBAAM,WAAN;AAAA,MAAM,WAAN,uBAAM,WAAN;AAAA,MAAM,EAAN,uBAAM,EAAN;AAAA,MAAM,KAAN,uBAAM,KAAN;AAAA,MAA6CV,GAA7C,uBAA6CA,GAA7C;;AAKA,MAAIW,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,aAAa,EAAnB,aAAA;AAAkC,IAAA,GAAG,EAAEC;AAAvC,GAAA,EACGjB,sBAAsB,CAAA,QAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA;AACrBkB,IAAAA,WADgD,EAChDA,WADqB;AAErBC,IAAAA,WAFgD,EAEhDA;AAFqB,KAGlBN,KAHkB,EADzB,CADF;AAVF,CAAA;;AAqBA,eAAeO,IAAI,CAACC,UAAU,CAA9B,WAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Flex from '../../primitives/Flex';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport isNil from 'lodash.isnil';\nimport type { IAvatarGroupProps } from './types';\nimport { default as Avatar } from './Avatar';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\n// Todo: Try using HStack instead\n\nconst getAvatarGroupChildren = (\n  children?: JSX.Element[] | JSX.Element,\n  space?: number,\n  max?: number,\n  plusAvatarBg?: string,\n  props?: any\n) => {\n  let childrenArray: any = React.Children.toArray(children);\n  let plusAvatars: number = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  const trailingChildren = childrenArray.slice(1);\n  const defaultProps = {\n    ml: space,\n  };\n  return [\n    plusAvatars > 0 ? (\n      <Avatar bg={plusAvatarBg} {...defaultProps} {...props}>\n        {'+ ' + plusAvatars}\n      </Avatar>\n    ) : null,\n    React.Children.map(\n      trailingChildren.reverse(),\n      (child: any, index: number) => {\n        return React.cloneElement(\n          child,\n          {\n            key: `avatar-group-child-${index}`,\n            ...props,\n            ...defaultProps,\n            ...child.props,\n          },\n          child.props.children\n        );\n      }\n    ),\n    React.cloneElement(\n      childrenArray[0],\n      {\n        ...props,\n        ...childrenArray[0].props,\n      },\n      childrenArray[0].props.children\n    ),\n  ];\n};\n\nconst AvatarGroup = (allProps: IAvatarGroupProps, ref: any) => {\n  const { children, ...props } = allProps;\n  const { borderColor, borderWidth, bg, space, max } = usePropsResolution(\n    'AvatarGroup',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Flex flexDirection=\"row-reverse\" ref={ref}>\n      {getAvatarGroupChildren(children, space, max, bg, {\n        borderColor,\n        borderWidth,\n        ...props,\n      })}\n    </Flex>\n  );\n};\n\nexport default memo(forwardRef(AvatarGroup));\n"]},"metadata":{},"sourceType":"module"}