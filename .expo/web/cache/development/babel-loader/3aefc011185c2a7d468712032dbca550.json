{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from \"../../../hooks\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport Box from \"../Box\";\nimport { SliderContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nfunction SliderThumb(props, ref) {\n  var _React$useContext = React.useContext(SliderContext),\n      state = _React$useContext.state,\n      trackLayout = _React$useContext.trackLayout,\n      orientation = _React$useContext.orientation,\n      colorScheme = _React$useContext.colorScheme,\n      thumbSize = _React$useContext.thumbSize,\n      isReadOnly = _React$useContext.isReadOnly,\n      isDisabled = _React$useContext.isDisabled;\n\n  var resolvedProps = usePropsResolution('SliderThumb', _objectSpread({\n    size: thumbSize,\n    colorScheme: colorScheme\n  }, props), {\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  });\n  var inputRef = React.useRef(null);\n\n  var _useSliderThumb = useSliderThumb({\n    index: 0,\n    trackLayout: trackLayout,\n    inputRef: inputRef,\n    orientation: orientation\n  }, state),\n      thumbProps = _useSliderThumb.thumbProps,\n      inputProps = _useSliderThumb.inputProps;\n\n  var thumbAbsoluteSize = useToken('sizes', resolvedProps.size);\n  var thumbStyles = {\n    bottom: orientation === 'vertical' ? \"\".concat(state.getThumbPercent(0) * 100, \"%\") : undefined,\n    left: orientation !== 'vertical' ? \"\".concat(state.getThumbPercent(0) * 100, \"%\") : undefined,\n    transform: orientation === 'vertical' ? [{\n      translateY: parseInt(thumbAbsoluteSize) / 2\n    }] : [{\n      translateX: -parseInt(thumbAbsoluteSize) / 2\n    }]\n  };\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? resolvedProps.scaleOnPressed : 1\n  });\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    position: \"absolute\"\n  }, thumbProps, resolvedProps, {\n    ref: ref,\n    style: [thumbStyles, props.style]\n  }), props.children, Platform.OS === 'web' && React.createElement(VisuallyHidden, null, React.createElement(\"input\", _extends({\n    ref: inputRef\n  }, inputProps))));\n}\n\nSliderThumb.displayName = 'SliderThumb';\nexport default forwardRef(SliderThumb);","map":{"version":3,"sources":["SliderThumb.tsx"],"names":["isDisabled","React","resolvedProps","usePropsResolution","size","colorScheme","props","isReadOnly","inputRef","inputProps","useSliderThumb","index","trackLayout","orientation","thumbAbsoluteSize","useToken","thumbStyles","bottom","state","left","transform","translateY","parseInt","translateX","scale","useHasResponsiveProps","Platform","SliderThumb","forwardRef"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISliderThumbProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction SliderThumb(props: ISliderThumbProps, ref: any) {\n  const {\n    state,\n    trackLayout,\n    orientation,\n    colorScheme,\n    thumbSize,\n    isReadOnly,\n    isDisabled,\n  } = React.useContext(SliderContext);\n  const resolvedProps = usePropsResolution(\n    'SliderThumb',\n    {\n      size: thumbSize,\n      colorScheme,\n      ...props,\n    },\n    { isDisabled, isReadOnly }\n  );\n  const inputRef = React.useRef(null);\n  const { thumbProps, inputProps } = useSliderThumb(\n    {\n      index: 0,\n      trackLayout,\n      inputRef,\n      orientation,\n    },\n    state\n  );\n\n  const thumbAbsoluteSize = useToken('sizes', resolvedProps.size);\n\n  const thumbStyles: any = {\n    bottom:\n      orientation === 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    left:\n      orientation !== 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    transform:\n      orientation === 'vertical'\n        ? [{ translateY: parseInt(thumbAbsoluteSize) / 2 }]\n        : [{ translateX: -parseInt(thumbAbsoluteSize) / 2 }],\n  };\n\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? resolvedProps.scaleOnPressed : 1,\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...thumbProps}\n      {...resolvedProps}\n      ref={ref}\n      style={[thumbStyles, props.style]}\n      // {...(isReadOnly && _readOnly)}\n      // {...(isDisabled && _disabled)}\n    >\n      {props.children}\n      {Platform.OS === 'web' && (\n        <VisuallyHidden>\n          <input ref={inputRef} {...inputProps} />\n        </VisuallyHidden>\n      )}\n    </Box>\n  );\n}\n\nSliderThumb.displayName = 'SliderThumb';\n\nexport default forwardRef(SliderThumb);\n"]},"metadata":{},"sourceType":"module"}