{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Button } from \"../../primitives/Button\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar ActionsheetItem = function ActionsheetItem(props, ref) {\n  var resolvedProps = usePropsResolution('ActionsheetItem', props, undefined, {\n    cascadePseudoProps: true\n  });\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Button, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default memo(forwardRef(ActionsheetItem));","map":{"version":3,"sources":["ActionsheetItem.tsx"],"names":["ActionsheetItem","resolvedProps","usePropsResolution","cascadePseudoProps","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,MAAA;AAEA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAAA,GAAA,EAA6C;AACnE,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,iBAAA,EAAA,KAAA,EAAA,SAAA,EAItC;AACEC,IAAAA,kBAAkB,EAAE;AADtB,GAJsC,CAAxC;;AASA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AAED,SAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAA2B,IAAA,GAAG,EAAEC;AAAhC,GAAA,CAAA,CAAP;AAdF,CAAA;;AAiBA,eAAeC,IAAI,CAACC,UAAU,CAA9B,eAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IActionsheetItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetItem = (props: IActionsheetItemProps, ref?: any) => {\n  const resolvedProps = usePropsResolution(\n    'ActionsheetItem',\n    props,\n    undefined,\n    {\n      cascadePseudoProps: true,\n    }\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <Button {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ActionsheetItem));\n"]},"metadata":{},"sourceType":"module"}