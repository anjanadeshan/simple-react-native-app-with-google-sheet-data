{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"_icon\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { usePropsResolution } from \"../../../hooks\";\nimport Box from \"../../primitives/Box\";\nimport { default as IconButton } from \"../IconButton\";\nimport { CloseIcon } from \"../../primitives/Icon/Icons\";\nimport { PopoverContext } from \"./PopoverContext\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar PopoverCloseButton = function PopoverCloseButton(props, ref) {\n  var _React$useContext = React.useContext(PopoverContext),\n      onClose = _React$useContext.onClose;\n\n  var _usePropsResolution = usePropsResolution('PopoverCloseButton', props),\n      _icon = _usePropsResolution._icon,\n      resolvedPorps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, {\n    position: \"absolute\",\n    right: 1,\n    top: 1,\n    zIndex: 1,\n    ref: ref\n  }, React.createElement(IconButton, _extends({}, resolvedPorps, {\n    icon: React.createElement(CloseIcon, _icon),\n    onPress: onClose\n  })));\n};\n\nexport default React.memo(React.forwardRef(PopoverCloseButton));","map":{"version":3,"sources":["PopoverCloseButton.tsx"],"names":["default","PopoverCloseButton","onClose","React","resolvedPorps","usePropsResolution","useHasResponsiveProps","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,kBAAA;AACA,OAAA,GAAA;AACA,SAASA,OAAO,IAAhB,UAAA;AACA,SAAA,SAAA;AACA,SAAA,cAAA;AACA,SAAA,qBAAA;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,KAAA,EAAA,GAAA,EAGtB;AACH,0BAAyBE,KAAK,CAALA,UAAAA,CAAzB,cAAyBA,CAAzB;AAAA,MAAQD,OAAR,qBAAQA,OAAR;;AACA,4BAAoCG,kBAAkB,CAAA,oBAAA,EAFnD,KAEmD,CAAtD;AAAA,MAAM,KAAN,uBAAM,KAAN;AAAA,MAAkBD,aAAlB;;AAKA,MAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAK,IAAA,QAAQ,EAAb,UAAA;AAAyB,IAAA,KAAK,EAA9B,CAAA;AAAmC,IAAA,GAAG,EAAtC,CAAA;AAA2C,IAAA,MAAM,EAAjD,CAAA;AAAsD,IAAA,GAAG,EAAEC;AAA3D,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEE,IAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAA,SAAA,EAFR,KAEQ,CAFR;AAGE,IAAA,OAAO,EAAEL;AAHX,GAAA,CAAA,CADF,CADF;AAbF,CAAA;;AAwBA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,kBAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport { default as IconButton, IIconButtonProps } from '../IconButton';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverCloseButton = (\n  props: Omit<IIconButtonProps, 'icon'>,\n  ref: any\n) => {\n  const { onClose }: any = React.useContext(PopoverContext);\n  const { _icon, ...resolvedPorps } = usePropsResolution(\n    'PopoverCloseButton',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box position=\"absolute\" right={1} top={1} zIndex={1} ref={ref}>\n      <IconButton\n        {...resolvedPorps}\n        icon={<CloseIcon {..._icon} />}\n        onPress={onClose}\n      />\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(PopoverCloseButton));\n"]},"metadata":{},"sourceType":"module"}