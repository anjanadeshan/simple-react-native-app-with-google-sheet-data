{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.renderItemComponent = function (data) {\n      return _jsx(TouchableOpacity, {\n        style: styles.container,\n        children: _jsx(Image, {\n          style: styles.image,\n          source: {\n            uri: data.item.url\n          }\n        })\n      });\n    };\n\n    _this.ItemSeparator = function () {\n      return _jsx(View, {\n        style: {\n          height: 2,\n          backgroundColor: \"rgba(0,0,0,0.5)\",\n          marginLeft: 10,\n          marginRight: 10\n        }\n      });\n    };\n\n    _this.state = {\n      data: [],\n      refreshing: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchCats();\n    }\n  }, {\n    key: \"fetchCats\",\n    value: function fetchCats() {\n      var _this2 = this;\n\n      this.setState({\n        refreshing: true\n      });\n      fetch('https://api.thecatapi.com/v1/images/search?limit=10&page=1').then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        _this2.setState({\n          data: resJson\n        });\n\n        _this2.setState({\n          refreshing: false\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(SafeAreaView, {\n        children: _jsx(FlatList, {\n          data: this.state.data,\n          renderItem: function renderItem(item) {\n            return _this3.renderItemComponent(item);\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          ItemSeparatorComponent: this.ItemSeparator\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: 300,\n    margin: 10,\n    backgroundColor: '#FFF',\n    borderRadius: 6\n  },\n  image: {\n    height: '100%',\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["C:/CD/Reactn/links/App.js"],"names":["React","App","props","renderItemComponent","data","styles","container","image","uri","item","url","ItemSeparator","height","backgroundColor","marginLeft","marginRight","state","refreshing","fetchCats","setState","fetch","then","res","json","resJson","catch","e","console","log","id","toString","Component","StyleSheet","create","margin","borderRadius"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;IAUqBC,G;;;;;AACjB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAsBnBC,mBAtBmB,GAsBG,UAACC,IAAD;AAAA,aAClB,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACC,SAAhC;AAAA,kBACI,KAAC,KAAD;AAAO,UAAA,KAAK,EAAED,MAAM,CAACE,KAArB;AAA4B,UAAA,MAAM,EAAE;AAAEC,YAAAA,GAAG,EAAEJ,IAAI,CAACK,IAAL,CAAUC;AAAjB;AAApC;AADJ,QADkB;AAAA,KAtBH;;AAAA,UA2BnBC,aA3BmB,GA2BH;AAAA,aAAM,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAC/BC,UAAAA,MAAM,EAAE,CADuB;AAE/BC,UAAAA,eAAe,EAAE,iBAFc;AAG/BC,UAAAA,UAAU,EAAE,EAHmB;AAI/BC,UAAAA,WAAW,EAAE;AAJkB;AAAb,QAAN;AAAA,KA3BG;;AAEf,UAAKC,KAAL,GAAa;AACTZ,MAAAA,IAAI,EAAE,EADG;AAETa,MAAAA,UAAU,EAAE;AAFH,KAAb;AAFe;AAMlB;;;;WAED,6BAAoB;AAChB,WAAKC,SAAL;AACH;;;WAED,qBAAY;AAAA;;AACR,WAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE;AAAd,OAAd;AACAG,MAAAA,KAAK,CAAC,4DAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;AACb,QAAA,MAAI,CAACL,QAAL,CAAc;AAAEf,UAAAA,IAAI,EAAEoB;AAAR,SAAd;;AACA,QAAA,MAAI,CAACL,QAAL,CAAc;AAAEF,UAAAA,UAAU,EAAE;AAAd,SAAd;AACH,OALL,EAKOQ,KALP,CAKa,UAAAC,CAAC;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,OALd;AAMH;;;WAmBD,kBAAS;AAAA;;AACP,aACE,KAAC,YAAD;AAAA,kBACE,KAAC,QAAD;AACE,UAAA,IAAI,EAAE,KAAKV,KAAL,CAAWZ,IADnB;AAEE,UAAA,UAAU,EAAE,oBAAAK,IAAI;AAAA,mBAAI,MAAI,CAACN,mBAAL,CAAyBM,IAAzB,CAAJ;AAAA,WAFlB;AAGE,UAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,mBAAIA,IAAI,CAACoB,EAAL,CAAQC,QAAR,EAAJ;AAAA,WAHpB;AAIE,UAAA,sBAAsB,EAAE,KAAKnB;AAJ/B;AADF,QADF;AAWD;;;;EApD4BX,KAAK,CAAC+B,S;;SAAlB9B,G;AAuDrB,IAAMI,MAAM,GAAG2B,UAAU,CAACC,MAAX,CAAkB;AAC/B3B,EAAAA,SAAS,EAAE;AACTM,IAAAA,MAAM,EAAE,GADC;AAETsB,IAAAA,MAAM,EAAE,EAFC;AAGTrB,IAAAA,eAAe,EAAE,MAHR;AAITsB,IAAAA,YAAY,EAAE;AAJL,GADoB;AAO/B5B,EAAAA,KAAK,EAAE;AACLK,IAAAA,MAAM,EAAE,MADH;AAELuB,IAAAA,YAAY,EAAE;AAFT;AAPwB,CAAlB,CAAf","sourcesContent":["\nimport React from \"react\";\nimport {\n    StyleSheet,\n    SafeAreaView,\n    FlatList,\n    View,\n    Image,\n    TouchableOpacity\n} from \"react-native\";\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            refreshing: true,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchCats();\n    }\n\n    fetchCats() {\n        this.setState({ refreshing: true });\n        fetch('https://api.thecatapi.com/v1/images/search?limit=10&page=1')\n            .then(res => res.json())\n            .then(resJson => {\n                this.setState({ data: resJson });\n                this.setState({ refreshing: false });\n            }).catch(e => console.log(e));\n    }\n\n    renderItemComponent = (data) =>\n        <TouchableOpacity style={styles.container}>\n            <Image style={styles.image} source={{ uri: data.item.url }} />\n        </TouchableOpacity>\n\n    ItemSeparator = () => <View style={{\n        height: 2,\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        marginLeft: 10,\n        marginRight: 10,\n    }}\n    />\n\n    // handleRefresh = () => {\n    //     this.setState({ refreshing: false }, () => { this.fetchCats() }); // call fetchCats after setting the state\n    // }\n\n    render() {\n      return (\n        <SafeAreaView>\n          <FlatList\n            data={this.state.data}\n            renderItem={item => this.renderItemComponent(item)}\n            keyExtractor={item => item.id.toString()}\n            ItemSeparatorComponent={this.ItemSeparator}\n            // refreshing={this.state.refreshing}\n            // onRefresh={this.handleRefresh}\n          />\n        </SafeAreaView>)\n    }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 300,\n    margin: 10,\n    backgroundColor: '#FFF',\n    borderRadius: 6,\n  },\n  image: {\n    height: '100%',\n    borderRadius: 4,\n  },\n});\n\n// import React, { Component } from \"react\";\n// import { StyleSheet, Text, View, SafeAreaView, SectionList, StatusBar } from \"react-native\";\n\n// // const DATA = [\n// //   {\n// //     title: \"Main dishes\",\n// //     data: [\"Pizza\", \"Burger\", \"Risotto\"]\n// //   },\n// //   {\n// //     title: \"Sides\",\n// //     data: [\"French Fries\", \"Onion Rings\", \"Fried Shrimps\"]\n// //   },\n// //   {\n// //     title: \"Drinks\",\n// //     data: [\"Water\", \"Coke\", \"Beer\"]\n// //   },\n// //   {\n// //     title: \"Desserts\",\n// //     data: [\"Cheese Cake\", \"Ice Cream\"]\n// //   }\n// // ];\n\n// const Item = ({ title }) => (\n//   <View style={styles.item}>\n//     <Text style={styles.title}>{title}</Text>\n//   </View>\n// );\n\n// class App extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         DATA: [],\n//         refreshing:true,\n//     }\n// }\n//   componentDidMount = () => {\n//        this.setState({ refreshing: true });\n//     fetch(\"https://opensheet.elk.sh/1DjrkLokL7ODiY4FZH1hvlc91yi-NbOT90Jtz5furBgo/Movies\", {\n//         \"method\": \"GET\",\n\n//     })\n//         .then((response) => response.json())\n//         .then((responseJson) => {\n//             console.log(\"Mount\",responseJson[0].Category);\n//             this.setState({\n//               DATA: {},\n//               refreshing:true,\n//             })\n//             // console.log(\"state check\",this.state.timings)\n//         })\n//         .catch((error) => {\n//             console.error(error);\n//         });\n// }\n// handleRefresh = () => {\n//   this.setState({ refreshing: false }, () => { this.componentDidMount() }); // call fetchCats after setting the state\n// }\n//   render() {\n//     // console.log(\"Mount\",responseJson[0].Category);\n//     return (\n//       <SafeAreaView style={styles.container}>\n//         <SectionList\n//           sections={DATA}\n//           refreshing={this.state.refreshing}\n//             onRefresh={this.handleRefresh}\n//           keyExtractor={(item, index) => item + index}\n//           renderItem={({ item }) => <Item title={item} />}\n//           renderSectionHeader={({ section: { title } }) => (\n//             <Text style={styles.header}>{title}</Text>\n//           )}\n//         />\n//       </SafeAreaView>\n//     );\n//   }\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     paddingTop: StatusBar.currentHeight,\n//     marginHorizontal: 16\n//   },\n//   item: {\n//     backgroundColor: \"#f9c2ff\",\n//     padding: 20,\n//     marginVertical: 8\n//   },\n//   header: {\n//     fontSize: 32,\n//     backgroundColor: \"#fff\"\n//   },\n//   title: {\n//     fontSize: 24\n//   }\n// });\n\n// export default App;"]},"metadata":{},"sourceType":"module"}