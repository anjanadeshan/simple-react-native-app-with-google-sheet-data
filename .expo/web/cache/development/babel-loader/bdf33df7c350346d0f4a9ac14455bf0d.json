{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isDisabled\", \"isReadOnly\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from \"../../../hooks\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport Box from \"../Box\";\nimport { SliderContext } from \"./Context\";\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nfunction Slider(_ref, ref) {\n  var isDisabled = _ref.isDisabled,\n      isReadOnly = _ref.isReadOnly,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _props$accessibilityL;\n\n  var newProps = _objectSpread(_objectSpread({}, props), {}, {\n    'aria-label': (_props$accessibilityL = props.accessibilityLabel) !== null && _props$accessibilityL !== void 0 ? _props$accessibilityL : 'Slider'\n  });\n\n  if (typeof props.value === 'number') {\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  var _useLayout = useLayout(),\n      onLayout = _useLayout.onLayout,\n      trackLayout = _useLayout.layout;\n\n  var updatedProps = _extends2({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  var state = useSliderState(_objectSpread(_objectSpread({}, updatedProps), {}, {\n    numberFormatter: {\n      format: function format(e) {\n        return e;\n      }\n    },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: function onChange(val) {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: function onChangeEnd(val) {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    }\n  }));\n  var resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  });\n\n  var _useSlider = useSlider(props, state, trackLayout),\n      trackProps = _useSlider.trackProps;\n\n  var wrapperStyle = {\n    height: props.orientation === 'vertical' ? '100%' : undefined,\n    width: props.orientation !== 'vertical' ? '100%' : undefined\n  };\n  var contextValue = React.useMemo(function () {\n    return {\n      trackLayout: trackLayout,\n      state: state,\n      orientation: props.orientation,\n      isDisabled: isDisabled,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps: trackProps,\n      isReadOnly: isReadOnly,\n      onTrackLayout: onLayout,\n      thumbSize: resolvedProps.thumbSize,\n      sliderSize: resolvedProps.sliderSize\n    };\n  }, [trackLayout, state, props.orientation, isDisabled, props.isReversed, props.colorScheme, isReadOnly, onLayout, resolvedProps.thumbSize, resolvedProps.sliderSize]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(SliderContext.Provider, {\n    value: contextValue\n  }, React.createElement(Box, _extends({}, wrapperStyle, {\n    justifyContent: \"center\",\n    ref: ref,\n    alignItems: \"center\"\n  }, resolvedProps), React.Children.map(props.children, function (child, index) {\n    if (child.displayName === 'SliderThumb') {\n      return React.cloneElement(child, {\n        index: index\n      });\n    }\n\n    return child;\n  })));\n}\n\nexport default forwardRef(Slider);","map":{"version":3,"sources":["Slider.tsx"],"names":["props","newProps","layout","trackLayout","useLayout","updatedProps","Object","isReadOnly","state","useSliderState","numberFormatter","format","e","minValue","maxValue","onChange","val","onChangeEnd","resolvedProps","usePropsResolution","isDisabled","trackProps","useSlider","wrapperStyle","height","width","undefined","contextValue","orientation","isReversed","colorScheme","onTrackLayout","thumbSize","sliderSize","useHasResponsiveProps","child","index","forwardRef"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ISliderProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction Slider({ isDisabled, isReadOnly, ...props }: ISliderProps, ref?: any) {\n  const newProps = {\n    ...props,\n    'aria-label': props.accessibilityLabel ?? 'Slider',\n  };\n\n  if (typeof props.value === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  const { onLayout, layout: trackLayout } = useLayout();\n  const updatedProps: ISliderProps = Object.assign({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  const state = useSliderState({\n    ...updatedProps,\n    //@ts-ignore\n    numberFormatter: { format: (e) => e },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: (val: any) => {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: (val: any) => {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    },\n  });\n\n  const resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled,\n    isReadOnly,\n  });\n\n  const { trackProps } = useSlider(\n    (props as unknown) as any,\n    state,\n    trackLayout\n  );\n\n  const wrapperStyle = {\n    height: props.orientation === 'vertical' ? '100%' : undefined,\n    width: props.orientation !== 'vertical' ? '100%' : undefined,\n  };\n  const contextValue = React.useMemo(() => {\n    return {\n      trackLayout,\n      state,\n      orientation: props.orientation,\n      isDisabled: isDisabled,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps,\n      isReadOnly: isReadOnly,\n      onTrackLayout: onLayout,\n      thumbSize: resolvedProps.thumbSize,\n      sliderSize: resolvedProps.sliderSize,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    trackLayout,\n    state,\n    props.orientation,\n    isDisabled,\n    props.isReversed,\n    props.colorScheme,\n    isReadOnly,\n    onLayout,\n    resolvedProps.thumbSize,\n    resolvedProps.sliderSize,\n  ]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <Box\n        {...wrapperStyle}\n        justifyContent=\"center\"\n        ref={ref}\n        alignItems=\"center\"\n        {...resolvedProps}\n      >\n        {React.Children.map(props.children, (child, index) => {\n          if (child.displayName === 'SliderThumb') {\n            return React.cloneElement(child as React.ReactElement, {\n              index,\n            });\n          }\n\n          return child;\n        })}\n      </Box>\n    </SliderContext.Provider>\n  );\n}\n\nexport default forwardRef(Slider);\n"]},"metadata":{},"sourceType":"module"}