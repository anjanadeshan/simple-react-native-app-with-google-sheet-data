{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"boxSize\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar AvatarBadge = memo(forwardRef(function (props, ref) {\n  var _usePropsResolution = usePropsResolution('AvatarBadge', props),\n      boxSize = _usePropsResolution.boxSize,\n      newProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    position: \"absolute\",\n    right: 0,\n    bottom: 0\n  }, newProps, {\n    width: boxSize || 3,\n    height: boxSize || 3,\n    ref: ref\n  }));\n}));\nAvatarBadge.displayName = 'AvatarBadge';\nexport default AvatarBadge;","map":{"version":3,"sources":["Badge.tsx"],"names":["AvatarBadge","memo","forwardRef","newProps","usePropsResolution","useHasResponsiveProps","boxSize","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA;AACA,SAAA,kBAAA;AAEA,SAAA,qBAAA;AAEA,IAAMA,WAAW,GAAGC,IAAI,CACtBC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAyC;AAClD,4BAAiCE,kBAAkB,CAAA,aAAA,EADD,KACC,CAAnD;AAAA,MAAM,OAAN,uBAAM,OAAN;AAAA,MAAoBD,QAApB;;AAEA,MAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,IAAA,QAAQ,EADV,UAAA;AAEE,IAAA,KAAK,EAFP,CAAA;AAGE,IAAA,MAAM,EAAE;AAHV,GAAA,EAAA,QAAA,EAAA;AAKE,IAAA,KAAK,EAAEC,OAAO,IALhB,CAAA;AAME,IAAA,MAAM,EAAEA,OAAO,IANjB,CAAA;AAOE,IAAA,GAAG,EAAEC;AAPP,GAAA,CAAA,CADF;AAPJ,CACY,CADY,CAAxB;AAqBAP,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AACA,eAAA,WAAA","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarBadgeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AvatarBadge = memo(\n  forwardRef((props: IAvatarBadgeProps, ref?: any) => {\n    const { boxSize, ...newProps } = usePropsResolution('AvatarBadge', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <Box\n        position=\"absolute\"\n        right={0}\n        bottom={0}\n        {...newProps}\n        width={boxSize || 3}\n        height={boxSize || 3}\n        ref={ref}\n      />\n    );\n  })\n);\n\nAvatarBadge.displayName = 'AvatarBadge';\nexport default AvatarBadge as (props: IAvatarBadgeProps, ref?: any) => any;\n"]},"metadata":{},"sourceType":"module"}