{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { usePropsResolution } from \"../../../hooks\";\nimport React from 'react';\nimport { default as Box } from \"../../primitives/Box\";\nimport { PopoverContext } from \"./PopoverContext\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar PopoverBody = function PopoverBody(props, ref) {\n  var resolvedProps = usePropsResolution('PopoverBody', props);\n\n  var _React$useContext = React.useContext(PopoverContext),\n      setBodyMounted = _React$useContext.setBodyMounted,\n      bodyId = _React$useContext.bodyId;\n\n  React.useEffect(function () {\n    setBodyMounted(true);\n    return function () {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    nativeID: bodyId\n  }, resolvedProps, props, {\n    ref: ref\n  }));\n};\n\nexport default React.memo(React.forwardRef(PopoverBody));","map":{"version":3,"sources":["PopoverBody.tsx"],"names":["default","PopoverBody","resolvedProps","usePropsResolution","bodyId","React","setBodyMounted","useHasResponsiveProps","ref"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAA,kBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,SAASA,OAAO,IAAhB,GAAA;AACA,SAAA,cAAA;AACA,SAAA,qBAAA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAA,GAAA,EAAiC;AACnD,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,aAAA,EAAxC,KAAwC,CAAxC;;AACA,0BAAmCE,KAAK,CAALA,UAAAA,CAAnC,cAAmCA,CAAnC;AAAA,MAAM,cAAN,qBAAM,cAAN;AAAA,MAAwBD,MAAxB,qBAAwBA,MAAxB;;AAEAC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpBC,IAAAA,cAAc,CAAdA,IAAc,CAAdA;AACA,WAAO,YAAM;AACXA,MAAAA,cAAc,CAAdA,KAAc,CAAdA;AADF,KAAA;AAFFD,GAAAA,EAKG,CATgD,cAShD,CALHA;;AAOA,MAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SAAO,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AAAK,IAAA,QAAQ,EAAEH;AAAf,GAAA,EAAA,aAAA,EAAA,KAAA,EAAA;AAAqD,IAAA,GAAG,EAAEI;AAA1D,GAAA,CAAA,CAAP;AAdF,CAAA;;AAiBA,eAAeH,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,WAA0BA,CAAXA,CAAf","sourcesContent":["import { usePropsResolution } from '../../../hooks';\nimport React from 'react';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverBody = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverBody', props);\n  const { setBodyMounted, bodyId } = React.useContext(PopoverContext);\n\n  React.useEffect(() => {\n    setBodyMounted(true);\n    return () => {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={bodyId} {...resolvedProps} {...props} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(PopoverBody));\n"]},"metadata":{},"sourceType":"module"}