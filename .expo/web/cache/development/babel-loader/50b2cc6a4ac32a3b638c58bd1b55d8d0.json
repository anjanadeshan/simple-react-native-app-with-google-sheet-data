{"ast":null,"code":"import { mode, transparentize } from \"../tools\";\n\nvar baseStyle = function baseStyle(props) {\n  var colorScheme = props.colorScheme,\n      theme = props.theme;\n  return {\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    borderWidth: 2,\n    borderRadius: 'sm',\n    borderColor: mode('muted.300', 'muted.600')(props),\n    bg: mode('muted.50', 'muted.700')(props),\n    _text: {\n      ml: 2,\n      color: mode('darkText', 'lightText')(props)\n    },\n    _interactionBox: {\n      position: 'absolute',\n      borderRadius: 'full'\n    },\n    _hover: {\n      _interactionBox: {\n        bg: transparentize('muted.200', 0.3)(theme)\n      }\n    },\n    _focus: {\n      _interactionBox: {\n        bg: transparentize(\"\".concat(colorScheme, \".200\"), 0.5)(theme)\n      }\n    },\n    _focusVisible: {\n      _interactionBox: {\n        bg: transparentize(\"\".concat(colorScheme, \".200\"), 0.5)(theme)\n      }\n    },\n    _disabled: {\n      _interactionBox: {\n        bg: 'transparent'\n      },\n      opacity: 0.4\n    },\n    _pressed: {\n      _interactionBox: {\n        bg: transparentize(\"\".concat(colorScheme, \".200\"), 0.5)(theme)\n      }\n    },\n    _checked: {\n      borderColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props),\n      bg: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".300\"))(props)\n    },\n    _invalid: {\n      borderColor: mode('error.600', 'error.400')(props)\n    },\n    _icon: {\n      color: mode(\"muted.50\", \"muted.800\")(props)\n    }\n  };\n};\n\nvar sizes = {\n  lg: {\n    _icon: {\n      size: 6\n    },\n    _text: {\n      fontSize: 'xl'\n    }\n  },\n  md: {\n    _icon: {\n      size: 5\n    },\n    _text: {\n      fontSize: 'lg'\n    }\n  },\n  sm: {\n    _icon: {\n      size: 4\n    },\n    _text: {\n      fontSize: 'md'\n    }\n  }\n};\nvar defaultProps = {\n  defaultIsChecked: false,\n  size: 'sm',\n  colorScheme: 'primary'\n};\nexport default {\n  baseStyle: baseStyle,\n  sizes: sizes,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["checkbox.ts"],"names":["baseStyle","props","theme","justifyContent","flexDirection","borderWidth","borderRadius","borderColor","mode","bg","_text","ml","color","_interactionBox","position","_hover","transparentize","_focus","_focusVisible","_disabled","opacity","_pressed","_checked","_invalid","_icon","sizes","lg","size","fontSize","md","sm","defaultProps","defaultIsChecked","colorScheme"],"mappings":"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","sourcesContent":["import { mode, transparentize } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { colorScheme, theme } = props;\n\n  return {\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    borderWidth: 2,\n    borderRadius: 'sm',\n    borderColor: mode('muted.300', 'muted.600')(props),\n    bg: mode('muted.50', 'muted.700')(props), // matching background color\n\n    _text: {\n      ml: 2,\n      color: mode('darkText', 'lightText')(props),\n    },\n    _interactionBox: {\n      position: 'absolute',\n      borderRadius: 'full',\n    },\n    _hover: {\n      _interactionBox: {\n        bg: transparentize('muted.200', 0.3)(theme),\n      },\n    },\n    _focus: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _focusVisible: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _disabled: {\n      _interactionBox: {\n        bg: 'transparent',\n      },\n      opacity: 0.4,\n    },\n    _pressed: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _checked: {\n      borderColor: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props),\n      bg: mode(`${colorScheme}.600`, `${colorScheme}.300`)(props),\n    },\n    _invalid: {\n      borderColor: mode('error.600', 'error.400')(props),\n    },\n    _icon: {\n      color: mode(`muted.50`, `muted.800`)(props), // matching background color\n    },\n  };\n};\n\nconst sizes = {\n  lg: { _icon: { size: 6 }, _text: { fontSize: 'xl' } },\n  md: { _icon: { size: 5 }, _text: { fontSize: 'lg' } },\n  sm: { _icon: { size: 4 }, _text: { fontSize: 'md' } },\n};\n\nconst defaultProps = {\n  defaultIsChecked: false,\n  size: 'sm',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}