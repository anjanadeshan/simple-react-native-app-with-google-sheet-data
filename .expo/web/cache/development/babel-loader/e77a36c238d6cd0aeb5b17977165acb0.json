{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _clsx from \"clsx\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport _react, { useContext, useEffect, useRef, useState } from \"react\";\nimport { getInteractionModality, isFocusVisible as _isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin, useKeyboard } from \"@react-aria/interactions\";\nimport { focusWithoutScrolling, runAfterTransition, useLayoutEffect, mergeProps, useSyncRef } from \"@react-aria/utils\";\nexport function focusSafely(element) {\n  if (getInteractionModality() === 'virtual') {\n    var lastFocusedElement = document.activeElement;\n    runAfterTransition(function () {\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n\nfunction $ee5e90cbb4a22466973155c14222fa1$var$isStyleVisible(element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  var _element$style = element.style,\n      display = _element$style.display,\n      visibility = _element$style.visibility;\n  var isVisible = display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse';\n\n  if (isVisible) {\n    var getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n\n    var _getComputedStyle = getComputedStyle(element),\n        computedDisplay = _getComputedStyle.display,\n        computedVisibility = _getComputedStyle.visibility;\n\n    isVisible = computedDisplay !== 'none' && computedVisibility !== 'hidden' && computedVisibility !== 'collapse';\n  }\n\n  return isVisible;\n}\n\nfunction $ee5e90cbb4a22466973155c14222fa1$var$isAttributeVisible(element, childElement) {\n  return !element.hasAttribute('hidden') && (element.nodeName === 'DETAILS' && childElement && childElement.nodeName !== 'SUMMARY' ? element.hasAttribute('open') : true);\n}\n\nfunction $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(element, childElement) {\n  return element.nodeName !== '#comment' && $ee5e90cbb4a22466973155c14222fa1$var$isStyleVisible(element) && $ee5e90cbb4a22466973155c14222fa1$var$isAttributeVisible(element, childElement) && (!element.parentElement || $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(element.parentElement, element));\n}\n\nvar $c9e8f80f5bb1841844f54e4ad30b$var$FocusContext = _react.createContext(null);\n\nvar $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = null;\nvar $c9e8f80f5bb1841844f54e4ad30b$var$scopes = new Map();\nexport function FocusScope(props) {\n  var children = props.children,\n      contain = props.contain,\n      restoreFocus = props.restoreFocus,\n      autoFocus = props.autoFocus;\n  var startRef = useRef();\n  var endRef = useRef();\n  var scopeRef = useRef([]);\n  var ctx = useContext($c9e8f80f5bb1841844f54e4ad30b$var$FocusContext);\n  var parentScope = ctx == null ? void 0 : ctx.scopeRef;\n  useLayoutEffect(function () {\n    var node = startRef.current.nextSibling;\n    var nodes = [];\n\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n  }, [children, parentScope]);\n  useLayoutEffect(function () {\n    $c9e8f80f5bb1841844f54e4ad30b$var$scopes.set(scopeRef, parentScope);\n    return function () {\n      if ((scopeRef === $c9e8f80f5bb1841844f54e4ad30b$var$activeScope || $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope(scopeRef, $c9e8f80f5bb1841844f54e4ad30b$var$activeScope)) && (!parentScope || $c9e8f80f5bb1841844f54e4ad30b$var$scopes.has(parentScope))) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = parentScope;\n      }\n\n      $c9e8f80f5bb1841844f54e4ad30b$var$scopes.delete(scopeRef);\n    };\n  }, [scopeRef, parentScope]);\n  $c9e8f80f5bb1841844f54e4ad30b$var$useFocusContainment(scopeRef, contain);\n  $c9e8f80f5bb1841844f54e4ad30b$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n  $c9e8f80f5bb1841844f54e4ad30b$var$useAutoFocus(scopeRef, autoFocus);\n  var focusManager = $c9e8f80f5bb1841844f54e4ad30b$var$createFocusManagerForScope(scopeRef);\n  return _react.createElement($c9e8f80f5bb1841844f54e4ad30b$var$FocusContext.Provider, {\n    value: {\n      scopeRef: scopeRef,\n      focusManager: focusManager\n    }\n  }, _react.createElement(\"span\", {\n    \"data-focus-scope-start\": true,\n    hidden: true,\n    ref: startRef\n  }), children, _react.createElement(\"span\", {\n    \"data-focus-scope-end\": true,\n    hidden: true,\n    ref: endRef\n  }));\n}\nexport function useFocusManager() {\n  var _useContext;\n\n  return (_useContext = useContext($c9e8f80f5bb1841844f54e4ad30b$var$FocusContext)) == null ? void 0 : _useContext.focusManager;\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$createFocusManagerForScope(scopeRef) {\n  return {\n    focusNext: function focusNext(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var scope = scopeRef.current;\n      var _opts = opts,\n          from = _opts.from,\n          tabbable = _opts.tabbable,\n          wrap = _opts.wrap;\n      var node = from || document.activeElement;\n      var sentinel = scope[0].previousElementSibling;\n      var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n        tabbable: tabbable\n      }, scope);\n      walker.currentNode = $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope) ? node : sentinel;\n      var nextNode = walker.nextNode();\n\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n      }\n\n      if (nextNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);\n      }\n\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var scope = scopeRef.current;\n      var _opts2 = opts,\n          from = _opts2.from,\n          tabbable = _opts2.tabbable,\n          wrap = _opts2.wrap;\n      var node = from || document.activeElement;\n      var sentinel = scope[scope.length - 1].nextElementSibling;\n      var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n        tabbable: tabbable\n      }, scope);\n      walker.currentNode = $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope) ? node : sentinel;\n      var previousNode = walker.previousNode();\n\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode();\n      }\n\n      if (previousNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(previousNode, true);\n      }\n\n      return previousNode;\n    },\n    focusFirst: function focusFirst(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var scope = scopeRef.current;\n      var _opts3 = opts,\n          tabbable = _opts3.tabbable;\n      var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n        tabbable: tabbable\n      }, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      var nextNode = walker.nextNode();\n\n      if (nextNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);\n      }\n\n      return nextNode;\n    },\n    focusLast: function focusLast(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var scope = scopeRef.current;\n      var _opts4 = opts,\n          tabbable = _opts4.tabbable;\n      var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n        tabbable: tabbable\n      }, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      var previousNode = walker.previousNode();\n\n      if (previousNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(previousNode, true);\n      }\n\n      return previousNode;\n    }\n  };\n}\n\nvar $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements = ['input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'a[href]', 'area[href]', 'summary', 'iframe', 'object', 'embed', 'audio[controls]', 'video[controls]', '[contenteditable]'];\nvar $c9e8f80f5bb1841844f54e4ad30b$var$FOCUSABLE_ELEMENT_SELECTOR = $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n$c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nvar $c9e8f80f5bb1841844f54e4ad30b$var$TABBABLE_ELEMENT_SELECTOR = $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope) {\n  return scope[0].parentElement;\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$useFocusContainment(scopeRef, contain) {\n  var focusedNode = useRef();\n  var raf = useRef(null);\n  useLayoutEffect(function () {\n    var scope = scopeRef.current;\n\n    if (!contain) {\n      return;\n    }\n\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || scopeRef !== $c9e8f80f5bb1841844f54e4ad30b$var$activeScope) {\n        return;\n      }\n\n      var focusedElement = document.activeElement;\n      var scope = scopeRef.current;\n\n      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n        tabbable: true\n      }, scope);\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      }\n\n      e.preventDefault();\n\n      if (nextElement) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextElement, true);\n      }\n    };\n\n    var onFocus = function onFocus(e) {\n      if (!$c9e8f80f5bb1841844f54e4ad30b$var$activeScope || $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope($c9e8f80f5bb1841844f54e4ad30b$var$activeScope, scopeRef)) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if (scopeRef === $c9e8f80f5bb1841844f54e4ad30b$var$activeScope && !$c9e8f80f5bb1841844f54e4ad30b$var$isElementInChildScope(e.target, scopeRef)) {\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if ($c9e8f80f5bb1841844f54e4ad30b$var$activeScope) {\n          $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope($c9e8f80f5bb1841844f54e4ad30b$var$activeScope.current);\n        }\n      } else if (scopeRef === $c9e8f80f5bb1841844f54e4ad30b$var$activeScope) {\n        focusedNode.current = e.target;\n      }\n    };\n\n    var onBlur = function onBlur(e) {\n      raf.current = requestAnimationFrame(function () {\n        if (scopeRef === $c9e8f80f5bb1841844f54e4ad30b$var$activeScope && !$c9e8f80f5bb1841844f54e4ad30b$var$isElementInChildScope(document.activeElement, scopeRef)) {\n          $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;\n          focusedNode.current = e.target;\n          focusedNode.current.focus();\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener('focusin', onFocus, false);\n    });\n    scope.forEach(function (element) {\n      return element.addEventListener('focusout', onBlur, false);\n    });\n    return function () {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener('focusin', onFocus, false);\n      });\n      scope.forEach(function (element) {\n        return element.removeEventListener('focusout', onBlur, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  useEffect(function () {\n    return function () {\n      return cancelAnimationFrame(raf.current);\n    };\n  }, [raf]);\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$isElementInAnyScope(element) {\n  for (var _iterator = _createForOfIteratorHelperLoose($c9e8f80f5bb1841844f54e4ad30b$var$scopes.keys()), _step; !(_step = _iterator()).done;) {\n    var scope = _step.value;\n\n    if ($c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(element, scope.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(element, scope) {\n  return scope.some(function (node) {\n    return node.contains(element);\n  });\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$isElementInChildScope(element, scope) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose($c9e8f80f5bb1841844f54e4ad30b$var$scopes.keys()), _step2; !(_step2 = _iterator2()).done;) {\n    var s = _step2.value;\n\n    if ((s === scope || $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope(scope, s)) && $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope(ancestor, scope) {\n  var parent = $c9e8f80f5bb1841844f54e4ad30b$var$scopes.get(scope);\n\n  if (!parent) {\n    return false;\n  }\n\n  if (parent === ancestor) {\n    return true;\n  }\n\n  return $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope(ancestor, parent);\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(element, scroll) {\n  if (scroll === void 0) {\n    scroll = false;\n  }\n\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {}\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {}\n  }\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope(scope) {\n  var sentinel = scope[0].previousElementSibling;\n  var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n    tabbable: true\n  }, scope);\n  walker.currentNode = sentinel;\n  $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(walker.nextNode());\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$useAutoFocus(scopeRef, autoFocus) {\n  var autoFocusRef = _react.useRef(autoFocus);\n\n  useEffect(function () {\n    if (autoFocusRef.current) {\n      $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;\n\n      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(document.activeElement, $c9e8f80f5bb1841844f54e4ad30b$var$activeScope.current)) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope(scopeRef.current);\n      }\n    }\n\n    autoFocusRef.current = false;\n  }, []);\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n  useLayoutEffect(function () {\n    if (!restoreFocus) {\n      return;\n    }\n\n    var scope = scopeRef.current;\n    var nodeToRestore = document.activeElement;\n\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      var focusedElement = document.activeElement;\n\n      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      var walker = getFocusableTreeWalker(document.body, {\n        tabbable: true\n      });\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n      }\n\n      if ((!nextElement || !$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(nextElement, scope)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        do {\n          nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n        } while ($c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(nextElement, scope));\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (nextElement) {\n          $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextElement, true);\n        } else {\n          if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return function () {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n\n      if (restoreFocus && nodeToRestore && $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(document.activeElement, scope)) {\n        requestAnimationFrame(function () {\n          if (document.body.contains(nodeToRestore)) {\n            $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nodeToRestore);\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\nexport function getFocusableTreeWalker(root, opts, scope) {\n  var selector = opts != null && opts.tabbable ? $c9e8f80f5bb1841844f54e4ad30b$var$TABBABLE_ELEMENT_SELECTOR : $c9e8f80f5bb1841844f54e4ad30b$var$FOCUSABLE_ELEMENT_SELECTOR;\n  var walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode(node) {\n      var _opts$from;\n\n      if (opts != null && (_opts$from = opts.from) != null && _opts$from.contains(node)) {\n        return NodeFilter.FILTER_REJECT;\n      }\n\n      if (node.matches(selector) && $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(node) && (!scope || $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope))) {\n        return NodeFilter.FILTER_ACCEPT;\n      }\n\n      return NodeFilter.FILTER_SKIP;\n    }\n  });\n\n  if (opts != null && opts.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\nexport function createFocusManager(ref) {\n  return {\n    focusNext: function focusNext(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var root = ref.current;\n      var _opts5 = opts,\n          from = _opts5.from,\n          tabbable = _opts5.tabbable,\n          wrap = _opts5.wrap;\n      var node = from || document.activeElement;\n      var walker = getFocusableTreeWalker(root, {\n        tabbable: tabbable\n      });\n\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n\n      var nextNode = walker.nextNode();\n\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode();\n      }\n\n      if (nextNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);\n      }\n\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var root = ref.current;\n      var _opts6 = opts,\n          from = _opts6.from,\n          tabbable = _opts6.tabbable,\n          wrap = _opts6.wrap;\n      var node = from || document.activeElement;\n      var walker = getFocusableTreeWalker(root, {\n        tabbable: tabbable\n      });\n\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        var next = $c9e8f80f5bb1841844f54e4ad30b$var$last(walker);\n\n        if (next) {\n          $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(next, true);\n        }\n\n        return next;\n      }\n\n      var previousNode = walker.previousNode();\n\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = $c9e8f80f5bb1841844f54e4ad30b$var$last(walker);\n      }\n\n      if (previousNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(previousNode, true);\n      }\n\n      return previousNode;\n    },\n    focusFirst: function focusFirst(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var root = ref.current;\n      var _opts7 = opts,\n          tabbable = _opts7.tabbable;\n      var walker = getFocusableTreeWalker(root, {\n        tabbable: tabbable\n      });\n      var nextNode = walker.nextNode();\n\n      if (nextNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);\n      }\n\n      return nextNode;\n    },\n    focusLast: function focusLast(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var root = ref.current;\n      var _opts8 = opts,\n          tabbable = _opts8.tabbable;\n      var walker = getFocusableTreeWalker(root, {\n        tabbable: tabbable\n      });\n      var next = $c9e8f80f5bb1841844f54e4ad30b$var$last(walker);\n\n      if (next) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(next, true);\n      }\n\n      return next;\n    }\n  };\n}\n\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$last(walker) {\n  var next;\n  var last;\n\n  do {\n    last = walker.lastChild();\n\n    if (last) {\n      next = last;\n    }\n  } while (last);\n\n  return next;\n}\n\nexport function useFocusRing(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$autoFocus = _props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      isTextInput = _props.isTextInput,\n      within = _props.within;\n  var state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || _isFocusVisible()\n  }).current;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var _useState3 = useState(function () {\n    return state.isFocused && state.isFocusVisible;\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocusVisibleState = _useState4[0],\n      setFocusVisible = _useState4[1];\n\n  var updateState = function updateState() {\n    return setFocusVisible(state.isFocused && state.isFocusVisible);\n  };\n\n  var onFocusChange = function onFocusChange(isFocused) {\n    state.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  };\n\n  useFocusVisibleListener(function (isFocusVisible) {\n    state.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {\n    isTextInput: isTextInput\n  });\n\n  var _useFocus = useFocus({\n    isDisabled: within,\n    onFocusChange: onFocusChange\n  }),\n      focusProps = _useFocus.focusProps;\n\n  var _useFocusWithin = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  }),\n      focusWithinProps = _useFocusWithin.focusWithinProps;\n\n  return {\n    isFocused: isFocused,\n    isFocusVisible: state.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\nexport function FocusRing(props) {\n  var _clsx2;\n\n  var children = props.children,\n      focusClass = props.focusClass,\n      focusRingClass = props.focusRingClass;\n\n  var _useFocusRing = useFocusRing(props),\n      isFocused = _useFocusRing.isFocused,\n      isFocusVisible = _useFocusRing.isFocusVisible,\n      focusProps = _useFocusRing.focusProps;\n\n  var child = _react.Children.only(children);\n\n  return _react.cloneElement(child, mergeProps(child.props, _babelRuntimeHelpersEsmExtends({}, focusProps, {\n    className: _clsx((_clsx2 = {}, _defineProperty(_clsx2, focusClass || '', isFocused), _defineProperty(_clsx2, focusRingClass || '', isFocusVisible), _clsx2))\n  })));\n}\n\nvar $e11539c8317b2d21639df611cb5658f$var$FocusableContext = _react.createContext(null);\n\nfunction $e11539c8317b2d21639df611cb5658f$var$useFocusableContext(ref) {\n  var context = useContext($e11539c8317b2d21639df611cb5658f$var$FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  var otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(context, [\"ref\"]);\n\n  return otherProps;\n}\n\nfunction $e11539c8317b2d21639df611cb5658f$var$FocusableProvider(props, ref) {\n  var children = props.children,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\"]);\n\n  var context = _babelRuntimeHelpersEsmExtends({}, otherProps, {\n    ref: ref\n  });\n\n  return _react.createElement($e11539c8317b2d21639df611cb5658f$var$FocusableContext.Provider, {\n    value: context\n  }, children);\n}\n\nexport var FocusableProvider = _react.forwardRef($e11539c8317b2d21639df611cb5658f$var$FocusableProvider);\nexport function useFocusable(props, domRef) {\n  var _useFocus2 = useFocus(props),\n      focusProps = _useFocus2.focusProps;\n\n  var _useKeyboard = useKeyboard(props),\n      keyboardProps = _useKeyboard.keyboardProps;\n\n  var interactions = mergeProps(focusProps, keyboardProps);\n  var domProps = $e11539c8317b2d21639df611cb5658f$var$useFocusableContext(domRef);\n  var interactionProps = props.isDisabled ? {} : domProps;\n  var autoFocusRef = useRef(props.autoFocus);\n  useEffect(function () {\n    if (autoFocusRef.current && domRef.current) {\n      domRef.current.focus();\n    }\n\n    autoFocusRef.current = false;\n  }, []);\n  return {\n    focusableProps: mergeProps(_babelRuntimeHelpersEsmExtends({}, interactions, {\n      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n    }), interactionProps)\n  };\n}","map":{"version":3,"sources":["packages/@react-aria/focus/src/focusSafely.ts","packages/@react-aria/focus/src/isElementVisible.ts","packages/@react-aria/focus/src/FocusScope.tsx","packages/@react-aria/focus/src/useFocusRing.ts","packages/@react-aria/focus/src/FocusRing.tsx","packages/@react-aria/focus/src/useFocusable.tsx"],"names":["getInteractionModality","lastFocusedElement","document","runAfterTransition","focusWithoutScrolling","element","visibility","isVisible","display","getComputedStyle","computedVisibility","computedDisplay","childElement","isStyleVisible","isAttributeVisible","isElementVisible","FocusContext","React","activeScope","scopes","autoFocus","startRef","useRef","endRef","scopeRef","ctx","useContext","parentScope","useLayoutEffect","node","nodes","isAncestorScope","useFocusContainment","useRestoreFocus","useAutoFocus","focusManager","createFocusManagerForScope","focusNext","opts","scope","wrap","from","sentinel","walker","getFocusableTreeWalker","getScopeRoot","tabbable","isElementInScope","nextNode","focusElement","focusPrevious","previousNode","focusFirst","focusLast","focusableElements","FOCUSABLE_ELEMENT_SELECTOR","TABBABLE_ELEMENT_SELECTOR","focusedNode","raf","onKeyDown","e","focusedElement","nextElement","onFocus","isElementInChildScope","focusFirstInScope","onBlur","requestAnimationFrame","useEffect","cancelAnimationFrame","s","parent","scroll","autoFocusRef","nodeToRestore","isElementInAnyScope","restoreFocus","selector","NodeFilter","acceptNode","root","ref","next","last","props","within","state","isFocused","isFocusVisible","useState","updateState","setFocusVisible","onFocusChange","setFocused","useFocusVisibleListener","isTextInput","focusProps","useFocus","isDisabled","focusWithinProps","useFocusWithin","onFocusWithinChange","focusRingClass","child","mergeProps","className","clsx","focusClass","FocusableContext","context","useSyncRef","otherProps","children","_FocusableProvider","keyboardProps","useKeyboard","interactions","domProps","useFocusableContext","interactionProps","domRef","focusableProps","tabIndex","undefined"],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: HTMLElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction isStyleVisible(element: Element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and \n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */  \nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely} from './focusSafely';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n// import {FocusScope, useFocusScope} from 'react-events/focus-scope';\n// export {FocusScope};\n\ninterface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\ninterface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: HTMLElement,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean\n}\n\ninterface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): HTMLElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): HTMLElement,\n  /** Moves focus to the first focusable or tabbable element in the focus scope. */\n  focusFirst(opts?: FocusManagerOptions): HTMLElement,\n    /** Moves focus to the last focusable or tabbable element in the focus scope. */\n  focusLast(opts?: FocusManagerOptions): HTMLElement\n}\n\ntype ScopeRef = RefObject<HTMLElement[]>;\ninterface IFocusContext {\n  scopeRef: ScopeRef,\n  focusManager: FocusManager\n}\n\nconst FocusContext = React.createContext<IFocusContext>(null);\n\nlet activeScope: ScopeRef = null;\nlet scopes: Map<ScopeRef, ScopeRef | null> = new Map();\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n// For now, it relies on the DOM tree order rather than the React tree order, and is probably\n// less optimized for performance.\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<HTMLElement[]>([]);\n  let ctx = useContext(FocusContext);\n  let parentScope = ctx?.scopeRef;\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n  }, [children, parentScope]);\n\n  useLayoutEffect(() => {\n    scopes.set(scopeRef, parentScope);\n    return () => {\n      // Restore the active scope on unmount if this scope or a descendant scope is active.\n      // Parent effect cleanups run before children, so we need to check if the\n      // parent scope actually still exists before restoring the active scope to it.\n      if (\n        (scopeRef === activeScope || isAncestorScope(scopeRef, activeScope)) &&\n        (!parentScope || scopes.has(parentScope))\n      ) {\n        activeScope = parentScope;\n      }\n      scopes.delete(scopeRef);\n    };\n  }, [scopeRef, parentScope]);\n\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  let focusManager = createFocusManagerForScope(scopeRef);\n\n  return (\n    <FocusContext.Provider value={{scopeRef, focusManager}}>\n      <span data-focus-scope-start hidden ref={startRef} />\n      {children}\n      <span data-focus-scope-end hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext)?.focusManager;\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<HTMLElement[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[0].previousElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as HTMLElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as HTMLElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[scope.length - 1].nextElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as HTMLElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as HTMLElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      let nextNode = walker.nextNode() as HTMLElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      let previousNode = walker.previousNode() as HTMLElement;\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: HTMLElement[]) {\n  return scope[0].parentElement;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<HTMLElement[]>, contain: boolean) {\n  let focusedNode = useRef<HTMLElement>();\n\n  let raf = useRef(null);\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || scopeRef !== activeScope) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      let scope = scopeRef.current;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode())  as HTMLElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if (!activeScope || isAncestorScope(activeScope, scopeRef)) {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if (scopeRef === activeScope && !isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else if (scopeRef === activeScope) {\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if (scopeRef === activeScope && !isElementInChildScope(document.activeElement, scopeRef)) {\n          activeScope = scopeRef;\n          focusedNode.current = e.target;\n          focusedNode.current.focus();\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => cancelAnimationFrame(raf.current);\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element) {\n  for (let scope of scopes.keys()) {\n    if (isElementInScope(element, scope.current)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isElementInScope(element: Element, scope: HTMLElement[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction isElementInChildScope(element: Element, scope: ScopeRef) {\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  for (let s of scopes.keys()) {\n    if ((s === scope || isAncestorScope(scope, s)) && isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isAncestorScope(ancestor: ScopeRef, scope: ScopeRef) {\n  let parent = scopes.get(scope);\n  if (!parent) {\n    return false;\n  }\n\n  if (parent === ancestor) {\n    return true;\n  }\n\n  return isAncestorScope(ancestor, parent);\n}\n\nfunction focusElement(element: HTMLElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: HTMLElement[]) {\n  let sentinel = scope[0].previousElementSibling;\n  let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n  walker.currentNode = sentinel;\n  focusElement(walker.nextNode() as HTMLElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<HTMLElement[]>, autoFocus: boolean) {\n  const autoFocusRef = React.useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n    autoFocusRef.current = false;\n  }, []);\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<HTMLElement[]>, restoreFocus: boolean, contain: boolean) {\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    if (!restoreFocus) {\n      return;\n    }\n\n    let scope = scopeRef.current;\n    let nodeToRestore = document.activeElement as HTMLElement;\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scope)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n        } while (isElementInScope(nextElement, scope));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n           // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n           // then move focus to the body.\n           // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n\n      if (restoreFocus && nodeToRestore && isElementInScope(document.activeElement, scope)) {\n        requestAnimationFrame(() => {\n          if (document.body.contains(nodeToRestore)) {\n            focusElement(nodeToRestore);\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: HTMLElement, opts?: FocusManagerOptions, scope?: HTMLElement[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as HTMLElement).matches(selector)\n          && isElementVisible(node as HTMLElement)\n          && (!scope || isElementInScope(node as HTMLElement, scope))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<HTMLElement>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      let {from, tabbable, wrap} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n      let nextNode = walker.nextNode() as HTMLElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as HTMLElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      let {from, tabbable, wrap} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next;\n      }\n      let previousNode = walker.previousNode() as HTMLElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = last(walker);\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let root = ref.current;\n      let {tabbable} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable});\n      let nextNode = walker.nextNode() as HTMLElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let root = ref.current;\n      let {tabbable} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable});\n      let next = last(walker);\n      if (next) {\n        focusElement(next, true);\n      }\n      return next;\n    }\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: HTMLElement;\n  let last: HTMLElement;\n  do {\n    last = walker.lastChild() as HTMLElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {HTMLAttributes, useState} from 'react';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useRef} from 'react';\n\ninterface FocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: FocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  }).current;\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.isFocused && state.isFocusVisible);\n\n  let updateState = () => setFocusVisible(state.isFocused && state.isFocusVisible);\n\n  let onFocusChange = isFocused => {\n    state.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  };\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: state.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\ninterface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableDOMProps, FocusableProps} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport React, {HTMLAttributes, MutableRefObject, ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\ninterface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusableProviderProps extends HTMLAttributes<HTMLElement> {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<HTMLElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<HTMLElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  // eslint-disable-next-line\n  let {ref: _, ...otherProps} = context;\n  return otherProps;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<HTMLElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<HTMLElement>) {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = useRef(props.autoFocus);\n\n  useEffect(() => {\n    if (autoFocusRef.current && domRef.current) {\n      domRef.current.focus();\n    }\n    autoFocusRef.current = false;\n  }, []);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}