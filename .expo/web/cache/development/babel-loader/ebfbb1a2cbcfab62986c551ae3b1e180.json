{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { mode } from \"./../tools\";\n\nfunction baseStyle(props) {\n  return {\n    bg: mode(\"#fff\", \"gray.700\")(props),\n    py: 2,\n    borderWidth: 1,\n    borderColor: mode(\"coolGray.200\", \"gray.600\")(props),\n    borderRadius: 'sm',\n    transition: {\n      initial: {\n        opacity: 0,\n        translateY: -10\n      },\n      animate: {\n        opacity: 1,\n        translateY: 0,\n        transition: {\n          duration: 200\n        }\n      },\n      exit: {\n        opacity: 0,\n        translateY: -10,\n        transition: {\n          duration: 150\n        }\n      },\n      style: StyleSheet.absoluteFill\n    }\n  };\n}\n\nexport default {\n  baseStyle: baseStyle\n};\nexport var MenuGroup = {\n  baseStyle: function baseStyle(props) {\n    return {\n      _title: {\n        fontSize: 'xs',\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        color: mode(\"gray.500\", \"gray.300\")(props)\n      },\n      p: 3\n    };\n  }\n};\nexport var MenuItem = {\n  baseStyle: function baseStyle(props) {\n    return {\n      px: 3,\n      py: 2,\n      outlineWidth: Platform.OS === 'web' ? 0 : undefined,\n      _disabled: {\n        _text: {\n          color: mode('gray.400', 'gray.400')(props)\n        }\n      },\n      _focus: {\n        bg: mode(\"coolGray.200\", \"gray.600\")(props)\n      },\n      _pressed: {\n        bg: mode(\"coolGray.300\", \"gray.500\")(props)\n      },\n      _icon: {\n        size: 4,\n        color: mode('gray.500', 'gray.100')(props)\n      }\n    };\n  },\n  defaultProps: {}\n};","map":{"version":3,"sources":["menu.ts"],"names":["bg","mode","py","borderWidth","borderColor","borderRadius","transition","initial","opacity","translateY","animate","duration","exit","style","StyleSheet","absoluteFill","baseStyle","MenuGroup","props","_title","fontSize","fontWeight","textTransform","color","p","MenuItem","px","outlineWidth","Platform","_disabled","_text","_focus","_pressed","_icon","size","defaultProps"],"mappings":";;AACA,SAAA,IAAA;;AAEA,SAAA,SAAA,CAAA,KAAA,EAA+C;AAC7C,SAAO;AACLA,IAAAA,EAAE,EAAEC,IAAI,CAAA,MAAA,EAAJA,UAAI,CAAJA,CADC,KACDA,CADC;AAELC,IAAAA,EAAE,EAFG,CAAA;AAGLC,IAAAA,WAAW,EAHN,CAAA;AAILC,IAAAA,WAAW,EAAEH,IAAI,CAAA,cAAA,EAAJA,UAAI,CAAJA,CAJR,KAIQA,CAJR;AAKLI,IAAAA,YAAY,EALP,IAAA;AAMLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAT,CAAA;AAAcC,QAAAA,UAAU,EAAE,CAAC;AAA3B,OADC;AAEVC,MAAAA,OAAO,EAAE;AACPF,QAAAA,OAAO,EADA,CAAA;AAEPC,QAAAA,UAAU,EAFH,CAAA;AAGPH,QAAAA,UAAU,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ;AAHL,OAFC;AAOVC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,OAAO,EAAT,CAAA;AAAcC,QAAAA,UAAU,EAAE,CAA1B,EAAA;AAA+BH,QAAAA,UAAU,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ;AAA3C,OAPI;AAQVE,MAAAA,KAAK,EAAEC,UAAU,CAACC;AARR;AANP,GAAP;AAiBD;;AAED,eAAe;AACbC,EAAAA,SAAAA,EAAAA;AADa,CAAf;AAIA,OAAO,IAAMC,SAAS,GAAG;AACvBD,EAAAA,SAAS,EAAGE,mBAAAA,KAAD;AAAA,WAAiB;AAC1BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EADF,IAAA;AAENC,QAAAA,UAAU,EAFJ,GAAA;AAGNC,QAAAA,aAAa,EAHP,WAAA;AAINC,QAAAA,KAAK,EAAEtB,IAAI,CAAA,UAAA,EAAJA,UAAI,CAAJA,CAAAA,KAAAA;AAJD,OADkB;AAO1BuB,MAAAA,CAAC,EAAE;AAPuB,KAAjB;AAAA;AADY,CAAlB;AAWP,OAAO,IAAMC,QAAQ,GAAG;AACtBT,EAAAA,SAAS,EAAGE,mBAAAA,KAAD;AAAA,WAAiB;AAC1BQ,MAAAA,EAAE,EADwB,CAAA;AAE1BxB,MAAAA,EAAE,EAFwB,CAAA;AAG1ByB,MAAAA,YAAY,EAAEC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,CAAAA,GAHY,SAAA;AAI1BC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE;AACLP,UAAAA,KAAK,EAAEtB,IAAI,CAAA,UAAA,EAAJA,UAAI,CAAJA,CAAAA,KAAAA;AADF;AADE,OAJe;AAS1B8B,MAAAA,MAAM,EAAE;AACN/B,QAAAA,EAAE,EAAEC,IAAI,CAAA,cAAA,EAAJA,UAAI,CAAJA,CAAAA,KAAAA;AADE,OATkB;AAY1B+B,MAAAA,QAAQ,EAAE;AACRhC,QAAAA,EAAE,EAAEC,IAAI,CAAA,cAAA,EAAJA,UAAI,CAAJA,CAAAA,KAAAA;AADI,OAZgB;AAe1BgC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EADC,CAAA;AAELX,QAAAA,KAAK,EAAEtB,IAAI,CAAA,UAAA,EAAJA,UAAI,CAAJA,CAAAA,KAAAA;AAFF;AAfmB,KAAjB;AAAA,GADW;AAqBtBkC,EAAAA,YAAY,EAAE;AArBQ,CAAjB","sourcesContent":["import { Platform, StyleSheet } from 'react-native';\nimport { mode } from './../tools';\n\nfunction baseStyle(props: Record<string, any>) {\n  return {\n    bg: mode(`#fff`, `gray.700`)(props),\n    py: 2,\n    borderWidth: 1,\n    borderColor: mode(`coolGray.200`, `gray.600`)(props),\n    borderRadius: 'sm',\n    transition: {\n      initial: { opacity: 0, translateY: -10 },\n      animate: {\n        opacity: 1,\n        translateY: 0,\n        transition: { duration: 200 },\n      },\n      exit: { opacity: 0, translateY: -10, transition: { duration: 150 } },\n      style: StyleSheet.absoluteFill,\n    },\n  };\n}\n\nexport default {\n  baseStyle,\n};\n\nexport const MenuGroup = {\n  baseStyle: (props: any) => ({\n    _title: {\n      fontSize: 'xs',\n      fontWeight: 600,\n      textTransform: 'uppercase',\n      color: mode(`gray.500`, `gray.300`)(props),\n    },\n    p: 3,\n  }),\n};\nexport const MenuItem = {\n  baseStyle: (props: any) => ({\n    px: 3,\n    py: 2,\n    outlineWidth: Platform.OS === 'web' ? 0 : undefined,\n    _disabled: {\n      _text: {\n        color: mode('gray.400', 'gray.400')(props),\n      },\n    },\n    _focus: {\n      bg: mode(`coolGray.200`, `gray.600`)(props),\n    },\n    _pressed: {\n      bg: mode(`coolGray.300`, `gray.500`)(props),\n    },\n    _icon: {\n      size: 4,\n      color: mode('gray.500', 'gray.100')(props),\n    },\n  }),\n  defaultProps: {},\n};\n"]},"metadata":{},"sourceType":"module"}