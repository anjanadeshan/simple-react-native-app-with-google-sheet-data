{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"centerContent\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { usePropsResolution } from \"../../../hooks\";\nimport Box from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Container = function Container(_ref, ref) {\n  var children = _ref.children,\n      centerContent = _ref.centerContent,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var resolvedProps = usePropsResolution('Container', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    ref: ref,\n    alignItems: centerContent ? 'center' : 'flex-start',\n    _text: {\n      textAlign: centerContent ? 'center' : 'left'\n    }\n  }, resolvedProps), children);\n};\n\nexport default React.memo(React.forwardRef(Container));","map":{"version":3,"sources":["index.tsx"],"names":["Container","props","resolvedProps","usePropsResolution","useHasResponsiveProps","centerContent","textAlign","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,kBAAA;AACA,OAAA,GAAA;AAEA,SAAA,qBAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAA,GAAA,EAGb;AAAA,MAFH,QAEG,QAFH,QAEG;AAAA,MAFH,aAEG,QAFH,aAEG;AAAA,MAF2BC,KAE3B;;AACH,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,WAAA,EADrC,KACqC,CAAxC;;AAEA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAGE,IAAA,UAAU,EAAEC,aAAa,GAAA,QAAA,GAH3B,YAAA;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAED,aAAa,GAAA,QAAA,GAAc;AAAxC;AAJT,GAAA,EAAA,aAAA,CAAA,EADF,QACE,CADF;AATF,CAAA;;AAsBA,eAAeE,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,SAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { IContainerProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Container = (\n  { children, centerContent, ...props }: IContainerProps,\n  ref?: any\n) => {\n  const resolvedProps = usePropsResolution('Container', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      ref={ref}\n      // TODO: these style's should be on theme.\n      alignItems={centerContent ? 'center' : 'flex-start'}\n      _text={{ textAlign: centerContent ? 'center' : 'left' }}\n      {...resolvedProps}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Container));\nexport type { IContainerProps };\n"]},"metadata":{},"sourceType":"module"}