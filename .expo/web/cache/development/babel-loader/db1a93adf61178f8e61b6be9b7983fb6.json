{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"colorScheme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../Box\";\nimport { useFormControlContext } from \"../../composites/FormControl\";\nimport { useRadioGroupState } from '@react-stately/radio';\nimport { useRadioGroup } from '@react-native-aria/radio';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nexport var RadioContext = React.createContext({});\nvar RadioWrapper = React.memo(function (props) {\n  return React.createElement(Box, _extends({\n    alignItems: \"flex-start\"\n  }, props.radioGroupProps, props), props.children);\n});\n\nvar RadioGroup = function RadioGroup(_ref, ref) {\n  var size = _ref.size,\n      colorScheme = _ref.colorScheme,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var formControlContext = useFormControlContext();\n  var state = useRadioGroupState(props);\n  var radioGroupState = useRadioGroup(_objectSpread(_objectSpread(_objectSpread({}, formControlContext), props), {}, {\n    'aria-label': props.accessibilityLabel\n  }), state);\n\n  var _React$useState = React.useState(props),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      propsState = _React$useState2[0];\n\n  var contextValue = React.useMemo(function () {\n    return {\n      formControlContext: formControlContext,\n      size: size,\n      colorScheme: colorScheme,\n      state: state\n    };\n  }, [size, colorScheme, formControlContext, state]);\n  var radioGroupProps = React.useMemo(function () {\n    return radioGroupState.radioGroupProps;\n  }, []);\n\n  if (useHasResponsiveProps(_objectSpread(_objectSpread({}, props), {}, {\n    size: size,\n    colorScheme: colorScheme\n  }))) {\n    return null;\n  }\n\n  return React.createElement(Box, {\n    ref: ref\n  }, React.createElement(RadioContext.Provider, {\n    value: contextValue\n  }, React.createElement(RadioWrapper, _extends({}, radioGroupProps, propsState, {\n    ref: ref\n  }))));\n};\n\nexport default memo(forwardRef(RadioGroup));","map":{"version":3,"sources":["RadioGroup.tsx"],"names":["RadioContext","React","RadioWrapper","props","RadioGroup","formControlContext","useFormControlContext","state","useRadioGroupState","radioGroupState","useRadioGroup","accessibilityLabel","contextValue","size","colorScheme","radioGroupProps","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA;AACA,SAAA,qBAAA;AAEA,SAAA,kBAAA,QAAA,sBAAA;AACA,SAAA,aAAA,QAAA,0BAAA;AACA,SAAA,qBAAA;AAEA,OAAO,IAAMA,YAAY,GAAGC,KAAK,CAALA,aAAAA,CAArB,EAAqBA,CAArB;AAGP,IAAMC,YAAY,GAAG,KAAK,CAAL,IAAA,CAAYC,UAAAA,KAAD,EAAgB;AAE9C,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AAAK,IAAA,UAAU,EAAC;AAAhB,GAAA,EAAiCA,KAAK,CAAtC,eAAA,EAAA,KAAA,CAAA,EACGA,KAAK,CAFV,QACE,CADF;AAFF,CAAqB,CAArB;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAA,GAAA,EAGd;AAAA,MAFH,IAEG,QAFH,IAEG;AAAA,MAFH,WAEG,QAFH,WAEG;AAAA,MAFqBD,KAErB;;AACH,MAAME,kBAAkB,GAAGC,qBAA3B,EAAA;AAEA,MAAMC,KAAK,GAAGC,kBAAkB,CAAhC,KAAgC,CAAhC;AACA,MAAMC,eAAe,GAAGC,aAAa,+CACnC,kBADmC,GACnC,KADmC;AACA,kBAAcP,KAAK,CAACQ;AADpB,MAArC,KAAqC,CAArC;;AAIA,wBAAqBV,KAAK,CAALA,QAAAA,CAArB,KAAqBA,CAArB;AAAA;AAAA,MAAM,UAAN;;AACA,MAAMW,YAAiB,GAAG,KAAK,CAAL,OAAA,CAAc,YAAM;AAC5C,WAAO;AACLP,MAAAA,kBADK,EACLA,kBADK;AAELQ,MAAAA,IAFK,EAELA,IAFK;AAGLC,MAAAA,WAHK,EAGLA,WAHK;AAILP,MAAAA,KAAAA,EAAAA;AAJK,KAAP;AADwB,GAAA,EAOvB,CAAA,IAAA,EAAA,WAAA,EAAA,kBAAA,EAPH,KAOG,CAPuB,CAA1B;AASA,MAAMQ,eAAe,GAAG,KAAK,CAAL,OAAA,CACtB;AAAA,WAAMN,eAAe,CADC,eACtB;AAAA,GADsB,EAlBrB,EAkBqB,CAAxB;;AAQA,MAAIO,qBAAqB,iCAAC,KAAD;AAAaH,IAAAA,IAAZ,EAAYA,IAAb;AAAmBC,IAAAA,WAAAA,EAAAA;AAAnB,KAAzB,EAA4D;AAC1D,WAAA,IAAA;AA3BC;;AA+BH,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAK,IAAA,GAAG,EAAEG;AAAV,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAD,CAAA,QAAA,EAAA;AAAuB,IAAA,KAAK,EAAEL;AAA9B,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,QAAA,CAAA,EAAA,EAAA,eAAA,EAAA,UAAA,EAAA;AAAmD,IAAA,GAAG,EAAEK;AAAxD,GAAA,CAAA,CADF,CADF,CADF;AAlCF,CAAA;;AA2CA,eAAeC,IAAI,CAACC,UAAU,CAA9B,UAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport type { IRadioContext, IRadioGroupProps } from './types';\nimport { useRadioGroupState } from '@react-stately/radio';\nimport { useRadioGroup } from '@react-native-aria/radio';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const RadioContext = React.createContext<IRadioContext>(\n  {} as IRadioContext\n);\nconst RadioWrapper = React.memo((props: any) => {\n  // console.log('hello here group');\n  return (\n    <Box alignItems=\"flex-start\" {...props.radioGroupProps} {...props}>\n      {props.children}\n    </Box>\n  );\n});\n\nconst RadioGroup = (\n  { size, colorScheme, ...props }: IRadioGroupProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n\n  const state = useRadioGroupState(props);\n  const radioGroupState = useRadioGroup(\n    { ...formControlContext, ...props, 'aria-label': props.accessibilityLabel },\n    state\n  );\n  const [propsState] = React.useState(props);\n  const contextValue: any = React.useMemo(() => {\n    return {\n      formControlContext,\n      size,\n      colorScheme,\n      state,\n    };\n  }, [size, colorScheme, formControlContext, state]);\n\n  const radioGroupProps = React.useMemo(\n    () => radioGroupState.radioGroupProps,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  // console.log(radioGroupState);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps({ ...props, size, colorScheme })) {\n    return null;\n  }\n\n  // return null;\n  return (\n    <Box ref={ref}>\n      <RadioContext.Provider value={contextValue}>\n        <RadioWrapper {...radioGroupProps} {...propsState} ref={ref} />\n      </RadioContext.Provider>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(RadioGroup));\n"]},"metadata":{},"sourceType":"module"}