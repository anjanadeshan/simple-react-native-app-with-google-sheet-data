{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { default as Box } from \"../../primitives/Box\";\nimport { PopoverContext } from \"./PopoverContext\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar PopoverHeader = function PopoverHeader(props, ref) {\n  var resolvedProps = usePropsResolution('PopoverHeader', props);\n\n  var _React$useContext = React.useContext(PopoverContext),\n      setHeaderMounted = _React$useContext.setHeaderMounted,\n      headerId = _React$useContext.headerId;\n\n  React.useEffect(function () {\n    setHeaderMounted(true);\n    return function () {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    accessibilityRole: Platform.OS === 'web' ? 'banner' : undefined,\n    nativeID: headerId\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default memo(forwardRef(PopoverHeader));","map":{"version":3,"sources":["PopoverHeader.tsx"],"names":["default","PopoverHeader","resolvedProps","usePropsResolution","headerId","React","setHeaderMounted","useHasResponsiveProps","Platform","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;;AAEA,SAAA,kBAAA;AACA,SAASA,OAAO,IAAhB,GAAA;AACA,SAAA,cAAA;AACA,SAAA,qBAAA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,KAAA,EAAA,GAAA,EAAiC;AACrD,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,eAAA,EAAxC,KAAwC,CAAxC;;AACA,0BAAuCE,KAAK,CAALA,UAAAA,CAAvC,cAAuCA,CAAvC;AAAA,MAAM,gBAAN,qBAAM,gBAAN;AAAA,MAA0BD,QAA1B,qBAA0BA,QAA1B;;AAEAC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpBC,IAAAA,gBAAgB,CAAhBA,IAAgB,CAAhBA;AACA,WAAO,YAAM;AACXA,MAAAA,gBAAgB,CAAhBA,KAAgB,CAAhBA;AADF,KAAA;AAFFD,GAAAA,EAKG,CATkD,gBASlD,CALHA;;AAOA,MAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AAEE,IAAA,iBAAiB,EAAEC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,QAAAA,GAFrB,SAAA;AAGE,IAAA,QAAQ,EAAEJ;AAHZ,GAAA,EAAA,aAAA,EAAA;AAKE,IAAA,GAAG,EAAEK;AALP,GAAA,CAAA,CADF;AAdF,CAAA;;AAyBA,eAAeC,IAAI,CAACC,UAAU,CAA9B,aAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = React.useContext(PopoverContext);\n\n  React.useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      //@ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'banner' : undefined}\n      nativeID={headerId}\n      {...resolvedProps}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]},"metadata":{},"sourceType":"module"}