{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar ActionsheetHeader = function ActionsheetHeader(props, ref) {\n  var resolvedProps = usePropsResolution('ActionsheetHeader', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default memo(forwardRef(ActionsheetHeader));","map":{"version":3,"sources":["ActionsheetHeader.tsx"],"names":["ActionsheetHeader","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,IAAA,QAAA,OAAA;AACA,OAAA,GAAA;AAEA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAA,GAAA,EAA+C;AACvE,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,mBAAA,EAD+B,KAC/B,CAAxC;;AAEA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,IAAA,cAAc,EADhB,QAAA;AAEE,IAAA,UAAU,EAAC;AAFb,GAAA,EAAA,aAAA,EAAA;AAIE,IAAA,GAAG,EAAEC;AAJP,GAAA,CAAA,CADF;AANF,CAAA;;AAgBA,eAAeC,IAAI,CAACC,UAAU,CAA9B,iBAA8B,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Box from '../../primitives/Box';\nimport type { IActionsheetHeaderProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetHeader = (props: IActionsheetHeaderProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ActionsheetHeader', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...resolvedProps}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(ActionsheetHeader));\n"]},"metadata":{},"sourceType":"module"}