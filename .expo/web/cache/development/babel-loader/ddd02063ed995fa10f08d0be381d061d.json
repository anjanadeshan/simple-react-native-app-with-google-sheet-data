{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Modal } from \"../../composites/Modal\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar ActionsheetFooter = function ActionsheetFooter(props, ref) {\n  var resolvedProps = usePropsResolution('ActionsheetFooter', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Modal.Content, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default memo(forwardRef(ActionsheetFooter));","map":{"version":3,"sources":["ActionsheetFooter.tsx"],"names":["ActionsheetFooter","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,KAAA;AAEA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAA,GAAA,EAA+C;AACvE,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,mBAAA,EAD+B,KAC/B,CAAxC;;AAEA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SAAO,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAAkC,IAAA,GAAG,EAAEC;AAAvC,GAAA,CAAA,CAAP;AANF,CAAA;;AASA,eAAeC,IAAI,CAACC,UAAU,CAA9B,iBAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetFooterProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetFooter = (props: IActionsheetFooterProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ActionsheetFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Modal.Content {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ActionsheetFooter));\n"]},"metadata":{},"sourceType":"module"}